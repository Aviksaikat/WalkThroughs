{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSolved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/avik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
    "1": "/home/avik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "10": "contracts/UniswapV2Pair.sol",
    "11": "contracts/libraries/UQ112x112.sol",
    "2": "/home/avik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "/home/avik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
    "4": "/home/avik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "5": "/home/avik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Address.sol",
    "6": "/home/avik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "7": "/home/avik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/math/Math.sol",
    "8": "/home/avik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/math/SafeMath.sol",
    "9": "contracts/Factory.sol"
  },
  "ast": {
    "absolutePath": "contracts/Factory.sol",
    "exportedSymbols": {
      "Address": [
        3688
      ],
      "Context": [
        3322
      ],
      "ERC20": [
        1739
      ],
      "Factory": [
        203
      ],
      "IERC20": [
        1817
      ],
      "IERC20Metadata": [
        3300
      ],
      "IERC20Permit": [
        3358
      ],
      "IUniswapV2Callee": [
        222
      ],
      "IUniswapV2Pair": [
        47
      ],
      "Math": [
        2963
      ],
      "SafeERC20": [
        2098
      ],
      "SafeMath": [
        3275
      ],
      "SimpleToken": [
        23
      ],
      "UQ112x112": [
        1152
      ],
      "UniswapV2ERC20": [
        233
      ],
      "UniswapV2Pair": [
        1108
      ]
    },
    "id": 204,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "/home/avik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 204,
        "sourceUnit": 1740,
        "src": "26:55:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/avik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 204,
        "sourceUnit": 1818,
        "src": "82:56:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/UniswapV2Pair.sol",
        "file": "./UniswapV2Pair.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 204,
        "sourceUnit": 1109,
        "src": "139:29:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "ERC20",
              "nameLocations": [
                "611:5:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1739,
              "src": "611:5:9"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "611:5:9"
          }
        ],
        "canonicalName": "SimpleToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 23,
        "linearizedBaseContracts": [
          23,
          1739,
          3300,
          1817,
          3322
        ],
        "name": "SimpleToken",
        "nameLocation": "596:11:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "687:50:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "703:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 17,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "707:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "703:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18,
                        "name": "_initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "715:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1556,
                      "src": "697:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "697:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "697:33:9"
                }
              ]
            },
            "id": 22,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "53696d706c65546f6b656e",
                    "id": 11,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "665:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_da035752f00a45fb4b10b269b9dcdc58efd98a12eda6b33da179acab837f7818",
                      "typeString": "literal_string \"SimpleToken\""
                    },
                    "value": "SimpleToken"
                  },
                  {
                    "hexValue": "535054",
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "680:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2f05a0ffc0c491cdeacb458a2f79632dce5a8d01cb1da4810845afdbd2865821",
                      "typeString": "literal_string \"SPT\""
                    },
                    "value": "SPT"
                  }
                ],
                "id": 13,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10,
                  "name": "ERC20",
                  "nameLocations": [
                    "659:5:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1739,
                  "src": "659:5:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "659:27:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_initialSupply",
                  "nameLocation": "643:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "635:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "634:24:9"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "687:0:9"
            },
            "scope": 23,
            "src": "623:114:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 204,
        "src": "587:152:9",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IUniswapV2Pair",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 47,
        "linearizedBaseContracts": [
          47
        ],
        "name": "IUniswapV2Pair",
        "nameLocation": "751:14:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "0902f1ac",
            "id": 32,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getReserves",
            "nameLocation": "781:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "792:2:9"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "reserve0",
                  "nameLocation": "850:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "842:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "reserve1",
                  "nameLocation": "868:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "860:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "blockTimestampLast",
                  "nameLocation": "885:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "878:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "841:63:9"
            },
            "scope": 47,
            "src": "772:133:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "6a627842",
            "id": 39,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "920:4:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "933:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "925:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:12:9"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "960:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "955:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:16:9"
            },
            "scope": 47,
            "src": "911:60:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "485cc955",
            "id": 46,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "986:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "997:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "1006:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "996:18:9"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1023:0:9"
            },
            "scope": 47,
            "src": "977:47:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 204,
        "src": "741:285:9",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Factory",
        "contractDependencies": [
          23,
          1108
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 203,
        "linearizedBaseContracts": [
          203
        ],
        "name": "Factory",
        "nameLocation": "1037:7:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "ad5c4648",
            "id": 50,
            "mutability": "constant",
            "name": "WETH",
            "nameLocation": "1075:4:9",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "1051:73:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1051:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303034654131",
              "id": 49,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1082:42:9",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000000004eA1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "49bd5a5e",
            "id": 52,
            "mutability": "mutable",
            "name": "uniswapV2Pair",
            "nameLocation": "1145:13:9",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "1130:28:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1130:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "a92a2b95c8d8436f6ac4c673c61487364f877efb9534d4296fad8ef904546c94",
            "id": 60,
            "name": "PairCreated",
            "nameLocation": "1171:11:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "1208:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1192:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "1240:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1224:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "1264:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1256:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1182:92:9"
            },
            "src": "1165:110:9"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "1303:333:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 64,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1321:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1325:5:9",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1321:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1334:7:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "1321:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 63,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1313:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1313:29:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "1313:29:9"
                },
                {
                  "assignments": [
                    71
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "1360:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 116,
                      "src": "1352:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 70,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1352:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000000000"
                            },
                            "id": 81,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 77,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1392:2:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "38",
                                "id": 78,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1398:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                "value": "8"
                              },
                              "src": "1392:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1402:7:9",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1"
                            },
                            "src": "1392:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000000000"
                            }
                          ],
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1376:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_SimpleToken_$23_$",
                            "typeString": "function (uint256) returns (contract SimpleToken)"
                          },
                          "typeName": {
                            "id": 75,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 74,
                              "name": "SimpleToken",
                              "nameLocations": [
                                "1380:11:9"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 23,
                              "src": "1380:11:9"
                            },
                            "referencedDeclaration": 23,
                            "src": "1380:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleToken_$23",
                              "typeString": "contract SimpleToken"
                            }
                          }
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1376:34:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleToken_$23",
                          "typeString": "contract SimpleToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_SimpleToken_$23",
                          "typeString": "contract SimpleToken"
                        }
                      ],
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1368:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 72,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1368:7:9",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1368:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1352:59:9"
                },
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85,
                      "name": "uniswapV2Pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "1421:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 87,
                          "name": "WETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "1448:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 88,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1454:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 86,
                        "name": "createPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "1437:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                          "typeString": "function (address,address) returns (address)"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1437:23:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1421:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1421:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 96,
                        "name": "uniswapV2Pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1492:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1507:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 93,
                            "name": "WETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1477:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 92,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1817,
                          "src": "1470:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1817_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1470:12:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1817",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1483:8:9",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1784,
                      "src": "1470:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:45:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104,
                        "name": "uniswapV2Pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1548:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1563:9:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 101,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "1532:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 100,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1817,
                          "src": "1525:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1817_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1525:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1817",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1539:8:9",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1784,
                      "src": "1525:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1525:48:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1525:48:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 112,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1618:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1622:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1618:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 109,
                            "name": "uniswapV2Pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1598:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 108,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1583:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$47_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1583:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$47",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1613:4:9",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "1583:34:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1583:46:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:46:9"
                }
              ]
            },
            "id": 117,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1292:2:9"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:0:9"
            },
            "scope": 203,
            "src": "1281:355:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "1746:359:9",
              "statements": [
                {
                  "assignments": [
                    127,
                    129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "1765:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 177,
                      "src": "1757:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1757:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 129,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "1781:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 177,
                      "src": "1773:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 128,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1773:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 130,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1791:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 131,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1800:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1791:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 136,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "1853:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 137,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "1861:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 138,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1852:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1791:77:9",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 133,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "1822:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 134,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "1830:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 135,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1821:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1756:112:9"
                },
                {
                  "assignments": [
                    142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 142,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1886:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 177,
                      "src": "1878:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 141,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1878:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 146,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "1920:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 147,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1928:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 144,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1903:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1907:12:9",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1903:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1903:32:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 143,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1893:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1893:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1878:58:9"
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 151,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "1946:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1961:17:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UniswapV2Pair_$1108_$",
                                "typeString": "function () returns (contract UniswapV2Pair)"
                              },
                              "typeName": {
                                "id": 155,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 154,
                                  "name": "UniswapV2Pair",
                                  "nameLocations": [
                                    "1965:13:9"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1108,
                                  "src": "1965:13:9"
                                },
                                "referencedDeclaration": 1108,
                                "src": "1965:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UniswapV2Pair_$1108",
                                  "typeString": "contract UniswapV2Pair"
                                }
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "salt"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 157,
                                "name": "salt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 142,
                                "src": "1985:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "src": "1961:29:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UniswapV2Pair_$1108_$salt",
                              "typeString": "function () returns (contract UniswapV2Pair)"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1961:31:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UniswapV2Pair_$1108",
                            "typeString": "contract UniswapV2Pair"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UniswapV2Pair_$1108",
                            "typeString": "contract UniswapV2Pair"
                          }
                        ],
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1953:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1953:7:9",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1953:40:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1946:47:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:47:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 167,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2035:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 168,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2043:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 164,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "2018:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 163,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "2003:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$47_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2003:20:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$47",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2024:10:9",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "2003:31:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2003:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:47:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 172,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2077:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 173,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2085:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 174,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "2093:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 171,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "2065:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "EmitStatement",
                  "src": "2060:38:9"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "1651:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "1679:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1671:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "1703:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1695:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1661:54:9"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "1740:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1732:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1731:14:9"
            },
            "scope": 203,
            "src": "1642:463:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "2158:161:9",
              "statements": [
                {
                  "assignments": [
                    184,
                    186,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 184,
                      "mutability": "mutable",
                      "name": "reserve0",
                      "nameLocation": "2177:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 201,
                      "src": "2169:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 183,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2169:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 186,
                      "mutability": "mutable",
                      "name": "reserve1",
                      "nameLocation": "2195:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 201,
                      "src": "2187:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2187:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 192,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 188,
                            "name": "uniswapV2Pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "2224:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 187,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "2209:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$47_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2209:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$47",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2252:11:9",
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "2209:54:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2209:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2168:97:9"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 193,
                        "name": "reserve0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "2282:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2294:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2282:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 196,
                        "name": "reserve1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "2299:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2311:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2299:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2282:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 182,
                  "id": 200,
                  "nodeType": "Return",
                  "src": "2275:37:9"
                }
              ]
            },
            "functionSelector": "64d98f6e",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSolved",
            "nameLocation": "2120:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2128:2:9"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2152:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2152:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2151:6:9"
            },
            "scope": 203,
            "src": "2111:208:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 204,
        "src": "1028:1293:9",
        "usedErrors": []
      }
    ],
    "src": "0:2322:9"
  },
  "bytecode": "",
  "bytecodeSha1": "f909ad37e4e4d7bbabb92fc58673bd33ce080127",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "Factory",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {},
      "11": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "Factory.createPair": {
          "4": [
            1791,
            1806,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "11": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "Factory.createPair": {
          "1": [
            1946,
            1993
          ],
          "2": [
            2003,
            2050
          ],
          "3": [
            2060,
            2098
          ]
        },
        "Factory.isSolved": {
          "0": [
            2275,
            2312
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Permit",
    "IUniswapV2Callee",
    "IUniswapV2Pair",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Math",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/SafeMath",
    "SimpleToken",
    "UQ112x112",
    "UniswapV2Pair"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806349bd5a5e1461005157806364d98f6e14610081578063ad5c464814610099578063c9c65396146100a2575b600080fd5b600054610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100896100b5565b6040519015158152602001610078565b610064614ea181565b6100646100b03660046102d8565b61015c565b60008060008060009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610322565b506001600160701b031691506001600160701b03169150816000148015610155575080155b9250505090565b6000806000836001600160a01b0316856001600160a01b031610610181578385610184565b84845b6040516bffffffffffffffffffffffff19606084811b8216602084015283901b1660348201529193509150600090604801604051602081830303815290604052805190602001209050806040516101da906102af565b8190604051809103906000f59050801580156101fa573d6000803e3d6000fd5b5060405163485cc95560e01b81526001600160a01b03858116600483015284811660248301529195509085169063485cc95590604401600060405180830381600087803b15801561024a57600080fd5b505af115801561025e573d6000803e3d6000fd5b50506040516001600160a01b0387811682528086169350861691507fa92a2b95c8d8436f6ac4c673c61487364f877efb9534d4296fad8ef904546c949060200160405180910390a350505092915050565b6124d58061037383390190565b80356001600160a01b03811681146102d357600080fd5b919050565b600080604083850312156102eb57600080fd5b6102f4836102bc565b9150610302602084016102bc565b90509250929050565b80516001600160701b03811681146102d357600080fd5b60008060006060848603121561033757600080fd5b6103408461030b565b925061034e6020850161030b565b9150604084015163ffffffff8116811461036757600080fd5b80915050925092509256fe60806040526001600b553480156200001657600080fd5b506040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b815250604051806040016040528060068152602001652aa72496ab1960d11b81525081600390816200006a919062000139565b50600462000079828262000139565b5050600580546001600160a01b031916331790555062000205565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000bf57607f821691505b602082108103620000e057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200013457600081815260208120601f850160051c810160208610156200010f5750805b601f850160051c820191505b8181101562000130578281556001016200011b565b5050505b505050565b81516001600160401b0381111562000155576200015562000094565b6200016d81620001668454620000aa565b84620000e6565b602080601f831160018114620001a557600084156200018c5750858301515b600019600386901b1c1916600185901b17855562000130565b600085815260208120601f198616915b82811015620001d657888601518255948401946001909101908401620001b5565b5085821015620001f55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6122c080620002156000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80636a627842116100c3578063ba9a7a561161007c578063ba9a7a5614610310578063bc25cf7714610319578063c45a01551461032c578063d21220a71461033f578063dd62ed3e14610352578063fff6cae91461036557600080fd5b80636a6278421461027e57806370a082311461029157806389afcb44146102ba57806395d89b41146102e2578063a457c2d7146102ea578063a9059cbb146102fd57600080fd5b806323b872dd1161011557806323b872dd14610224578063313ce567146102375780633950935114610246578063485cc955146102595780635909c0d51461026c5780635a3d54931461027557600080fd5b8063022c0d9f1461015d57806306fdde03146101725780630902f1ac14610190578063095ea7b3146101c45780630dfe1681146101e757806318160ddd14610212575b600080fd5b61017061016b366004611efa565b61036d565b005b61017a610885565b6040516101879190611fb2565b60405180910390f35b610198610917565b604080516001600160701b03948516815293909216602084015263ffffffff1690820152606001610187565b6101d76101d2366004611fe5565b610941565b6040519015158152602001610187565b6006546101fa906001600160a01b031681565b6040516001600160a01b039091168152602001610187565b6002545b604051908152602001610187565b6101d761023236600461200f565b61095b565b60405160128152602001610187565b6101d7610254366004611fe5565b61097f565b61017061026736600461204b565b6109a1565b61021660095481565b610216600a5481565b61021661028c36600461207e565b610a20565b61021661029f36600461207e565b6001600160a01b031660009081526020819052604090205490565b6102cd6102c836600461207e565b610cb9565b60408051928352602083019190915201610187565b61017a611000565b6101d76102f8366004611fe5565b61100f565b6101d761030b366004611fe5565b61108a565b6102166103e881565b61017061032736600461207e565b611098565b6005546101fa906001600160a01b031681565b6007546101fa906001600160a01b031681565b61021661036036600461204b565b61120c565b610170611237565b600b546001146103985760405162461bcd60e51b815260040161038f90612099565b60405180910390fd5b6000600b55841515806103ab5750600084115b6104055760405162461bcd60e51b815260206004820152602560248201527f556e697377617056323a20494e53554646494349454e545f4f55545055545f416044820152641353d5539560da1b606482015260840161038f565b600080610410610917565b5091509150816001600160701b0316871080156104355750806001600160701b031686105b61048b5760405162461bcd60e51b815260206004820152602160248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152605960f81b606482015260840161038f565b60065460075460009182916001600160a01b039182169190811690891682148015906104c95750806001600160a01b0316896001600160a01b031614155b61050d5760405162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b604482015260640161038f565b8a15610527576105276001600160a01b0383168a8d61135b565b8915610541576105416001600160a01b0382168a8c61135b565b86156105ae576040516304347a1760e21b81526001600160a01b038a16906310d1e85c9061057b9033908f908f908e908e906004016120c4565b600060405180830381600087803b15801561059557600080fd5b505af11580156105a9573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa1580156105f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106169190612110565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190612110565b92505050600089856001600160701b031661069c919061213f565b83116106a95760006106c6565b6106bc8a6001600160701b03871661213f565b6106c6908461213f565b905060006106dd8a6001600160701b03871661213f565b83116106ea576000610707565b6106fd8a6001600160701b03871661213f565b610707908461213f565b905060008211806107185750600081115b6107705760405162461bcd60e51b8152602060048201526024808201527f556e697377617056323a20494e53554646494349454e545f494e5055545f414d60448201526313d5539560e21b606482015260840161038f565b60006107926107808460036113b2565b61078c876103e86113b2565b906113c5565b905060006107a46107808460036113b2565b90506107c9620f42406107c36001600160701b038b8116908b166113b2565b906113b2565b6107d383836113b2565b10156108105760405162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b604482015260640161038f565b505061081e848488886113d1565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600b55505050505050505050565b60606003805461089490612152565b80601f01602080910402602001604051908101604052809291908181526020018280546108c090612152565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b5050505050905090565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b60003361094f818585611589565b60019150505b92915050565b6000336109698582856116ad565b610974858585611727565b506001949350505050565b60003361094f818585610992838361120c565b61099c919061218c565b611589565b6005546001600160a01b031633146109f25760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015260640161038f565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600b54600114610a445760405162461bcd60e51b815260040161038f90612099565b6000600b81905580610a54610917565b506006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610aa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aca9190612110565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3c9190612110565b90506000610b53836001600160701b0387166113c5565b90506000610b6a836001600160701b0387166113c5565b90506000610b7760025490565b905080600003610bae57610b996103e861078c610b9486866113b2565b6118cb565b9750610ba961dead6103e86119b3565b610bf5565b610bf26001600160701b038816610bc585846113b2565b610bcf91906121b5565b6001600160701b038816610be385856113b2565b610bed91906121b5565b611a72565b97505b60008811610c565760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d3525395115160c21b606482015260840161038f565b610c6089896119b3565b610c6c858589896113d1565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600b55509395945050505050565b600080600b54600114610cde5760405162461bcd60e51b815260040161038f90612099565b6000600b81905580610cee610917565b506006546007546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a0823190602401602060405180830381865afa158015610d48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6c9190612110565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610db6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dda9190612110565b306000908152602081905260409020546002549192509080610dfc83866113b2565b610e0691906121b5565b995080610e1383856113b2565b610e1d91906121b5565b985060008a118015610e2f5750600089115b610e8c5760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d0955493915160c21b606482015260840161038f565b610e963083611a88565b600654610ead906001600160a01b03168c8c61135b565b600754610ec4906001600160a01b03168c8b61135b565b6040516370a0823160e01b81523060048201526001600160a01b038716906370a0823190602401602060405180830381865afa158015610f08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2c9190612110565b6040516370a0823160e01b81523060048201529094506001600160a01b038616906370a0823190602401602060405180830381865afa158015610f73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f979190612110565b9250610fa584848a8a6113d1565b604080518b8152602081018b90526001600160a01b038d169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a350505050505050506001600b81905550915091565b60606004805461089490612152565b6000338161101d828661120c565b90508381101561107d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161038f565b6109748286868403611589565b60003361094f818585611727565b600b546001146110ba5760405162461bcd60e51b815260040161038f90612099565b6000600b556006546007546008546040516370a0823160e01b81523060048201526001600160a01b0393841693909216916111649185916001600160701b039091169085906370a0823190602401602060405180830381865afa158015611125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111499190612110565b611153919061213f565b6001600160a01b038516919061135b565b6008546040516370a0823160e01b8152306004820152611202918591600160701b9091046001600160701b0316906001600160a01b038516906370a0823190602401602060405180830381865afa1580156111c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e79190612110565b6111f1919061213f565b6001600160a01b038416919061135b565b50506001600b5550565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600b546001146112595760405162461bcd60e51b815260040161038f90612099565b6000600b556006546040516370a0823160e01b8152306004820152611354916001600160a01b0316906370a0823190602401602060405180830381865afa1580156112a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cc9190612110565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611314573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113389190612110565b6008546001600160701b0380821691600160701b9004166113d1565b6001600b55565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526113ad908490611bba565b505050565b60006113be82846121c9565b9392505050565b60006113be828461213f565b6001600160701b0384118015906113ef57506001600160701b038311155b6114315760405162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b604482015260640161038f565b6000611442640100000000426121e0565b60085490915063ffffffff600160e01b909104811682039081161580159061147257506001600160701b03841615155b801561148657506001600160701b03831615155b156114f1578063ffffffff166114ae8561149f86611c8c565b6001600160e01b031690611ca5565b600980546001600160e01b03929092169290920201905563ffffffff81166114d98461149f87611c8c565b600a80546001600160e01b0392909216929092020190555b506008805463ffffffff8316600160e01b026001600160e01b036001600160701b03888116600160701b9081026001600160e01b03199095168b83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a15050505050565b6001600160a01b0383166115eb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161038f565b6001600160a01b03821661164c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161038f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006116b9848461120c565b9050600019811461172157818110156117145760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161038f565b6117218484848403611589565b50505050565b6001600160a01b03831661178b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161038f565b6001600160a01b0382166117ed5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161038f565b6001600160a01b038316600090815260208190526040902054818110156118655760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161038f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611721565b6000816000036118dd57506000919050565b600060016118ea84611cba565b901c6001901b905060018184816119035761190361219f565b048201901c9050600181848161191b5761191b61219f565b048201901c905060018184816119335761193361219f565b048201901c9050600181848161194b5761194b61219f565b048201901c905060018184816119635761196361219f565b048201901c9050600181848161197b5761197b61219f565b048201901c905060018184816119935761199361219f565b048201901c90506113be818285816119ad576119ad61219f565b04611a72565b6001600160a01b038216611a095760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161038f565b8060026000828254611a1b919061218c565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000818310611a8157816113be565b5090919050565b6001600160a01b038216611ae85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161038f565b6001600160a01b03821660009081526020819052604090205481811015611b5c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161038f565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6000611c0f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d4e9092919063ffffffff16565b8051909150156113ad5780806020019051810190611c2d91906121f4565b6113ad5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161038f565b6000610955600160701b6001600160701b038416612216565b60006113be6001600160701b03831684612248565b600080608083901c15611ccf57608092831c92015b604083901c15611ce157604092831c92015b602083901c15611cf357602092831c92015b601083901c15611d0557601092831c92015b600883901c15611d1757600892831c92015b600483901c15611d2957600492831c92015b600283901c15611d3b57600292831c92015b600183901c156109555760010192915050565b6060611d5d8484600085611d65565b949350505050565b606082471015611dc65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161038f565b600080866001600160a01b03168587604051611de2919061226e565b60006040518083038185875af1925050503d8060008114611e1f576040519150601f19603f3d011682016040523d82523d6000602084013e611e24565b606091505b5091509150611e3587838387611e40565b979650505050505050565b60608315611eaf578251600003611ea8576001600160a01b0385163b611ea85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161038f565b5081611d5d565b611d5d8383815115611ec45781518083602001fd5b8060405162461bcd60e51b815260040161038f9190611fb2565b80356001600160a01b0381168114611ef557600080fd5b919050565b600080600080600060808688031215611f1257600080fd5b8535945060208601359350611f2960408701611ede565b9250606086013567ffffffffffffffff80821115611f4657600080fd5b818801915088601f830112611f5a57600080fd5b813581811115611f6957600080fd5b896020828501011115611f7b57600080fd5b9699959850939650602001949392505050565b60005b83811015611fa9578181015183820152602001611f91565b50506000910152565b6020815260008251806020840152611fd1816040850160208701611f8e565b601f01601f19169190910160400192915050565b60008060408385031215611ff857600080fd5b61200183611ede565b946020939093013593505050565b60008060006060848603121561202457600080fd5b61202d84611ede565b925061203b60208501611ede565b9150604084013590509250925092565b6000806040838503121561205e57600080fd5b61206783611ede565b915061207560208401611ede565b90509250929050565b60006020828403121561209057600080fd5b6113be82611ede565b602080825260119082015270155b9a5cddd85c158c8e881313d0d2d151607a1b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60006020828403121561212257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561095557610955612129565b600181811c9082168061216657607f821691505b60208210810361218657634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561095557610955612129565b634e487b7160e01b600052601260045260246000fd5b6000826121c4576121c461219f565b500490565b808202811582820484141761095557610955612129565b6000826121ef576121ef61219f565b500690565b60006020828403121561220657600080fd5b815180151581146113be57600080fd5b6001600160e01b0382811682821681810283169291811582850482141761223f5761223f612129565b50505092915050565b60006001600160e01b03838116806122625761226261219f565b92169190910492915050565b60008251612280818460208701611f8e565b919091019291505056fea2646970667358221220190463995ba0b4ea864131a3eea98e673d107b32594077ee63c2b50a98376c1464736f6c63430008110033a2646970667358221220c80d0eda8d2d929864bcac1c684d2685e90505b67912c742572e95463765c1dd64736f6c63430008110033",
  "deployedSourceMap": "1028:1293:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:28;;;;;-1:-1:-1;;;;;1130:28:9;;;;;;-1:-1:-1;;;;;178:32:12;;;160:51;;148:2;133:18;1130:28:9;;;;;;;;2111:208;;;:::i;:::-;;;387:14:12;;380:22;362:41;;350:2;335:18;2111:208:9;222:187:12;1051:73:9;;1082:42;1051:73;;1642:463;;;;;;:::i;:::-;;:::i;2111:208::-;2152:4;2169:16;2187;2224:13;;;;;;;;;-1:-1:-1;;;;;2224:13:9;-1:-1:-1;;;;;2209:54:9;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2168:97;-1:-1:-1;;;;;2168:97:9;;;-1:-1:-1;;;;;2168:97:9;;;2282:8;2294:1;2282:13;:30;;;;-1:-1:-1;2299:13:9;;2282:30;2275:37;;;;2111:208;:::o;1642:463::-;1732:12;1757:14;1773;1800:6;-1:-1:-1;;;;;1791:15:9;:6;-1:-1:-1;;;;;1791:15:9;;:77;;1853:6;1861;1791:77;;;1822:6;1830;1791:77;1903:32;;-1:-1:-1;;1732:2:12;1728:15;;;1724:24;;1903:32:9;;;1712:37:12;1783:15;;;1779:24;1765:12;;;1758:46;1756:112:9;;-1:-1:-1;1756:112:9;-1:-1:-1;1878:12:9;;1820::12;;1903:32:9;;;;;;;;;;;;1893:43;;;;;;1878:58;;1985:4;1961:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2003:47:9;;-1:-1:-1;;;2003:47:9;;-1:-1:-1;;;;;2073:15:12;;;2003:47:9;;;2055:34:12;2125:15;;;2105:18;;;2098:43;1946:47:9;;-1:-1:-1;2003:31:9;;;;;;1990:18:12;;2003:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2065:33:9;;-1:-1:-1;;;;;178:32:12;;;160:51;;2065:33:9;;;;-1:-1:-1;2065:33:9;;;-1:-1:-1;2065:33:9;;148:2:12;133:18;2065:33:9;;;;;;;1746:359;;;1642:463;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;414:173:12:-;482:20;;-1:-1:-1;;;;;531:31:12;;521:42;;511:70;;577:1;574;567:12;511:70;414:173;;;:::o;592:260::-;660:6;668;721:2;709:9;700:7;696:23;692:32;689:52;;;737:1;734;727:12;689:52;760:29;779:9;760:29;:::i;:::-;750:39;;808:38;842:2;831:9;827:18;808:38;:::i;:::-;798:48;;592:260;;;;;:::o;857:188::-;936:13;;-1:-1:-1;;;;;978:42:12;;968:53;;958:81;;1035:1;1032;1025:12;1050:450;1137:6;1145;1153;1206:2;1194:9;1185:7;1181:23;1177:32;1174:52;;;1222:1;1219;1212:12;1174:52;1245:40;1275:9;1245:40;:::i;:::-;1235:50;;1304:49;1349:2;1338:9;1334:18;1304:49;:::i;:::-;1294:59;;1396:2;1385:9;1381:18;1375:25;1440:10;1433:5;1429:22;1422:5;1419:33;1409:61;;1466:1;1463;1456:12;1409:61;1489:5;1479:15;;;1050:450;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    1028,
    2321
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x64D98F6E EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xC9C65396 EQ PUSH2 0xA2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x64 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x4EA1 DUP2 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x322 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP DUP2 PUSH1 0x0 EQ DUP1 ISZERO PUSH2 0x155 JUMPI POP DUP1 ISZERO JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x181 JUMPI DUP4 DUP6 PUSH2 0x184 JUMP JUMPDEST DUP5 DUP5 JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP4 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP1 PUSH2 0x2AF JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x1FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x485CC955 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP6 POP SWAP1 DUP6 AND SWAP1 PUSH4 0x485CC955 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP1 DUP7 AND SWAP4 POP DUP7 AND SWAP2 POP PUSH32 0xA92A2B95C8D8436F6AC4C673C61487364F877EFB9534D4296FAD8EF904546C94 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24D5 DUP1 PUSH2 0x373 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F4 DUP4 PUSH2 0x2BC JUMP JUMPDEST SWAP2 POP PUSH2 0x302 PUSH1 0x20 DUP5 ADD PUSH2 0x2BC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x340 DUP5 PUSH2 0x30B JUMP JUMPDEST SWAP3 POP PUSH2 0x34E PUSH1 0x20 DUP6 ADD PUSH2 0x30B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x2AB734B9BBB0B8102B19 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x2AA72496AB19 PUSH1 0xD1 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x6A SWAP2 SWAP1 PUSH3 0x139 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x79 DUP3 DUP3 PUSH3 0x139 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP PUSH3 0x205 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xBF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xE0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x10F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x130 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x11B JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x155 JUMPI PUSH3 0x155 PUSH3 0x94 JUMP JUMPDEST PUSH3 0x16D DUP2 PUSH3 0x166 DUP5 SLOAD PUSH3 0xAA JUMP JUMPDEST DUP5 PUSH3 0xE6 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1A5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x18C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x130 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1D6 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1B5 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x1F5 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x22C0 DUP1 PUSH3 0x215 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x212 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x1EFA JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17A PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x1FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x187 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x187 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1FA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x187 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x187 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x200F JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x187 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x170 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x204B JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x216 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x216 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x216 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x207E JUMP JUMPDEST PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x216 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x207E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x207E JUMP JUMPDEST PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x187 JUMP JUMPDEST PUSH2 0x17A PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0x100F JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0x108A JUMP JUMPDEST PUSH2 0x216 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x207E JUMP JUMPDEST PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1FA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1FA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x216 PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x204B JUMP JUMPDEST PUSH2 0x120C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1237 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 EQ PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x3AB JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E53554646494349454E545F4F55545055545F41 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1353D55395 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x410 PUSH2 0x917 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 LT DUP1 ISZERO PUSH2 0x435 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 LT JUMPDEST PUSH2 0x48B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E53554646494349454E545F4C49515549444954 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x59 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 SWAP1 DUP2 AND SWAP1 DUP10 AND DUP3 EQ DUP1 ISZERO SWAP1 PUSH2 0x4C9 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x556E697377617056323A20494E56414C49445F544F PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x38F JUMP JUMPDEST DUP11 ISZERO PUSH2 0x527 JUMPI PUSH2 0x527 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP11 DUP14 PUSH2 0x135B JUMP JUMPDEST DUP10 ISZERO PUSH2 0x541 JUMPI PUSH2 0x541 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP11 DUP13 PUSH2 0x135B JUMP JUMPDEST DUP7 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x4347A17 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x10D1E85C SWAP1 PUSH2 0x57B SWAP1 CALLER SWAP1 DUP16 SWAP1 DUP16 SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x20C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x616 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x65D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x0 DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST DUP4 GT PUSH2 0x6A9 JUMPI PUSH1 0x0 PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x6BC DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x213F JUMP JUMPDEST PUSH2 0x6C6 SWAP1 DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6DD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x213F JUMP JUMPDEST DUP4 GT PUSH2 0x6EA JUMPI PUSH1 0x0 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x6FD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x213F JUMP JUMPDEST PUSH2 0x707 SWAP1 DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x718 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E53554646494349454E545F494E5055545F414D PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x13D55395 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x792 PUSH2 0x780 DUP5 PUSH1 0x3 PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0x78C DUP8 PUSH2 0x3E8 PUSH2 0x13B2 JUMP JUMPDEST SWAP1 PUSH2 0x13C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7A4 PUSH2 0x780 DUP5 PUSH1 0x3 PUSH2 0x13B2 JUMP JUMPDEST SWAP1 POP PUSH2 0x7C9 PUSH3 0xF4240 PUSH2 0x7C3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP12 DUP2 AND SWAP1 DUP12 AND PUSH2 0x13B2 JUMP JUMPDEST SWAP1 PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0x7D3 DUP4 DUP4 PUSH2 0x13B2 JUMP JUMPDEST LT ISZERO PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x556E697377617056323A204B PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x38F JUMP JUMPDEST POP POP PUSH2 0x81E DUP5 DUP5 DUP9 DUP9 PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 CALLER SWAP1 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0xB SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x894 SWAP1 PUSH2 0x2152 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8C0 SWAP1 PUSH2 0x2152 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x90D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x90D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x94F DUP2 DUP6 DUP6 PUSH2 0x1589 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x969 DUP6 DUP3 DUP6 PUSH2 0x16AD JUMP JUMPDEST PUSH2 0x974 DUP6 DUP6 DUP6 PUSH2 0x1727 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x94F DUP2 DUP6 DUP6 PUSH2 0x992 DUP4 DUP4 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x1589 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB734B9BBB0B82B191D102327A92124A22222A7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x1 EQ PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE DUP1 PUSH2 0xA54 PUSH2 0x917 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACA SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3C SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB53 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x13C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB6A DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x13C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB77 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xBAE JUMPI PUSH2 0xB99 PUSH2 0x3E8 PUSH2 0x78C PUSH2 0xB94 DUP7 DUP7 PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0x18CB JUMP JUMPDEST SWAP8 POP PUSH2 0xBA9 PUSH2 0xDEAD PUSH2 0x3E8 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0xBF2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 AND PUSH2 0xBC5 DUP6 DUP5 PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0xBCF SWAP2 SWAP1 PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 AND PUSH2 0xBE3 DUP6 DUP6 PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0xBED SWAP2 SWAP1 PUSH2 0x21B5 JUMP JUMPDEST PUSH2 0x1A72 JUMP JUMPDEST SWAP8 POP JUMPDEST PUSH1 0x0 DUP9 GT PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E53554646494349454E545F4C49515549444954 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1657D35253951151 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH2 0xC60 DUP10 DUP10 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0xC6C DUP6 DUP6 DUP10 DUP10 PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0xB SSTORE POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB SLOAD PUSH1 0x1 EQ PUSH2 0xCDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE DUP1 PUSH2 0xCEE PUSH2 0x917 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD6C SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDDA SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x2 SLOAD SWAP2 SWAP3 POP SWAP1 DUP1 PUSH2 0xDFC DUP4 DUP7 PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0xE06 SWAP2 SWAP1 PUSH2 0x21B5 JUMP JUMPDEST SWAP10 POP DUP1 PUSH2 0xE13 DUP4 DUP6 PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0xE1D SWAP2 SWAP1 PUSH2 0x21B5 JUMP JUMPDEST SWAP9 POP PUSH1 0x0 DUP11 GT DUP1 ISZERO PUSH2 0xE2F JUMPI POP PUSH1 0x0 DUP10 GT JUMPDEST PUSH2 0xE8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E53554646494349454E545F4C49515549444954 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1657D09554939151 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH2 0xE96 ADDRESS DUP4 PUSH2 0x1A88 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xEAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 DUP13 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xEC4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 DUP12 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF2C SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF97 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST SWAP3 POP PUSH2 0xFA5 DUP5 DUP5 DUP11 DUP11 PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP12 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND SWAP2 CALLER SWAP2 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xB DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x894 SWAP1 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x101D DUP3 DUP7 PUSH2 0x120C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH2 0x974 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1589 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x94F DUP2 DUP6 DUP6 PUSH2 0x1727 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 EQ PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND SWAP2 PUSH2 0x1164 SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1125 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1149 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x1153 SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x1202 SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E7 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x11F1 SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xB SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 EQ PUSH2 0x1259 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x1354 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12CC SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1314 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1338 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x13AD SWAP1 DUP5 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BE DUP3 DUP5 PUSH2 0x21C9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BE DUP3 DUP5 PUSH2 0x213F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x13EF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 GT ISZERO JUMPDEST PUSH2 0x1431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E697377617056323A204F564552464C4F57 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1442 PUSH5 0x100000000 TIMESTAMP PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND DUP3 SUB SWAP1 DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1472 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1486 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x14F1 JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x14AE DUP6 PUSH2 0x149F DUP7 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x14D9 DUP5 PUSH2 0x149F DUP8 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE JUMPDEST POP PUSH1 0x8 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DUP2 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP6 AND DUP12 DUP4 AND OR SWAP5 SWAP1 SWAP5 OR SWAP2 DUP3 AND DUP4 OR SWAP5 DUP6 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP3 AND SWAP3 DUP3 AND SWAP3 SWAP1 SWAP3 OR DUP4 MSTORE SWAP3 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B9 DUP5 DUP5 PUSH2 0x120C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1721 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x38F JUMP JUMPDEST PUSH2 0x1721 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1589 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x178B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1865 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x18DD JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x18EA DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1903 JUMPI PUSH2 0x1903 PUSH2 0x219F JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x191B JUMPI PUSH2 0x191B PUSH2 0x219F JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1933 JUMPI PUSH2 0x1933 PUSH2 0x219F JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x194B JUMPI PUSH2 0x194B PUSH2 0x219F JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1963 JUMPI PUSH2 0x1963 PUSH2 0x219F JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x197B JUMPI PUSH2 0x197B PUSH2 0x219F JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1993 JUMPI PUSH2 0x1993 PUSH2 0x219F JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x13BE DUP2 DUP3 DUP6 DUP2 PUSH2 0x19AD JUMPI PUSH2 0x19AD PUSH2 0x219F JUMP JUMPDEST DIV PUSH2 0x1A72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x38F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A1B SWAP2 SWAP1 PUSH2 0x218C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1A81 JUMPI DUP2 PUSH2 0x13BE JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1AE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1B5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D4E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x13AD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C2D SWAP2 SWAP1 PUSH2 0x21F4 JUMP JUMPDEST PUSH2 0x13AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND PUSH2 0x2216 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BE PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND DUP5 PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 SWAP1 SHR ISZERO PUSH2 0x1CCF JUMPI PUSH1 0x80 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x40 DUP4 SWAP1 SHR ISZERO PUSH2 0x1CE1 JUMPI PUSH1 0x40 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x20 DUP4 SWAP1 SHR ISZERO PUSH2 0x1CF3 JUMPI PUSH1 0x20 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x10 DUP4 SWAP1 SHR ISZERO PUSH2 0x1D05 JUMPI PUSH1 0x10 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x8 DUP4 SWAP1 SHR ISZERO PUSH2 0x1D17 JUMPI PUSH1 0x8 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x4 DUP4 SWAP1 SHR ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x4 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x2 DUP4 SWAP1 SHR ISZERO PUSH2 0x1D3B JUMPI PUSH1 0x2 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x1 DUP4 SWAP1 SHR ISZERO PUSH2 0x955 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D5D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1D65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1DC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x38F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1DE2 SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E1F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E35 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1E40 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1EAF JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1EA8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1EA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x38F JUMP JUMPDEST POP DUP2 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1D5D DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1EC4 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x1FB2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1EF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1F29 PUSH1 0x40 DUP8 ADD PUSH2 0x1EDE JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1F69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1F7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FA9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F91 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1FD1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1F8E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2001 DUP4 PUSH2 0x1EDE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x202D DUP5 PUSH2 0x1EDE JUMP JUMPDEST SWAP3 POP PUSH2 0x203B PUSH1 0x20 DUP6 ADD PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x205E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2067 DUP4 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP PUSH2 0x2075 PUSH1 0x20 DUP5 ADD PUSH2 0x1EDE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2090 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13BE DUP3 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x155B9A5CDDD85C158C8E881313D0D2D151 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0xA0 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0xA0 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x955 JUMPI PUSH2 0x955 PUSH2 0x2129 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2166 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2186 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x955 JUMPI PUSH2 0x955 PUSH2 0x2129 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x21C4 JUMPI PUSH2 0x21C4 PUSH2 0x219F JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x955 JUMPI PUSH2 0x955 PUSH2 0x2129 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x21EF JUMPI PUSH2 0x21EF PUSH2 0x219F JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND DUP2 DUP2 MUL DUP4 AND SWAP3 SWAP2 DUP2 ISZERO DUP3 DUP6 DIV DUP3 EQ OR PUSH2 0x223F JUMPI PUSH2 0x223F PUSH2 0x2129 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 AND DUP1 PUSH2 0x2262 JUMPI PUSH2 0x2262 PUSH2 0x219F JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2280 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1F8E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT DIV PUSH4 0x995BA0B4 0xEA DUP7 COINBASE BALANCE LOG3 0xEE 0xA9 DUP15 PUSH8 0x3D107B32594077EE PUSH4 0xC2B50A98 CALLDATACOPY PUSH13 0x1464736F6C63430008110033A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xD 0xE 0xDA DUP14 0x2D SWAP3 SWAP9 PUSH5 0xBCAC1C684D 0x26 DUP6 0xE9 SDIV SDIV 0xB6 PUSH26 0x12C742572E95463765C1DD64736F6C6343000811003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "6": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "8": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "DUP1",
      "path": "9"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "REVERT",
      "path": "9"
    },
    "16": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "17": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "POP",
      "path": "9"
    },
    "18": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "21": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "LT",
      "path": "9"
    },
    "22": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "26": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "29": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "SHR",
      "path": "9"
    },
    "32": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "DUP1",
      "path": "9"
    },
    "33": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x49BD5A5E"
    },
    "38": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "EQ",
      "path": "9"
    },
    "39": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "43": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "DUP1",
      "path": "9"
    },
    "44": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x64D98F6E"
    },
    "49": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "EQ",
      "path": "9"
    },
    "50": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x81"
    },
    "53": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "54": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "DUP1",
      "path": "9"
    },
    "55": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xAD5C4648"
    },
    "60": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "EQ",
      "path": "9"
    },
    "61": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x99"
    },
    "64": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "65": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "DUP1",
      "path": "9"
    },
    "66": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xC9C65396"
    },
    "71": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "EQ",
      "path": "9"
    },
    "72": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA2"
    },
    "75": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "76": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "77": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "DUP1",
      "path": "9"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1028,
        2321
      ],
      "op": "REVERT",
      "path": "9"
    },
    "81": {
      "offset": [
        1130,
        1158
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "82": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "84": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "85": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x64"
    },
    "88": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "89": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "91": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "93": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "95": {
      "op": "SHL"
    },
    "96": {
      "op": "SUB"
    },
    "97": {
      "offset": [
        1130,
        1158
      ],
      "op": "AND",
      "path": "9"
    },
    "98": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "DUP2",
      "path": "9"
    },
    "99": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "JUMP",
      "path": "9"
    },
    "100": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "101": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "103": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "110": {
      "op": "SHL"
    },
    "111": {
      "op": "SUB"
    },
    "112": {
      "op": "SWAP1"
    },
    "113": {
      "op": "SWAP2"
    },
    "114": {
      "op": "AND"
    },
    "115": {
      "op": "DUP2"
    },
    "116": {
      "op": "MSTORE"
    },
    "117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "119": {
      "op": "ADD"
    },
    "120": {
      "offset": [
        1130,
        1158
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "121": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "123": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "124": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "DUP1",
      "path": "9"
    },
    "125": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "126": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "SUB",
      "path": "9"
    },
    "127": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "128": {
      "fn": null,
      "offset": [
        1130,
        1158
      ],
      "op": "RETURN",
      "path": "9"
    },
    "129": {
      "fn": "Factory.isSolved",
      "offset": [
        2111,
        2319
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "130": {
      "fn": "Factory.isSolved",
      "offset": [
        2111,
        2319
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x89"
    },
    "133": {
      "fn": "Factory.isSolved",
      "offset": [
        2111,
        2319
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB5"
    },
    "136": {
      "fn": "Factory.isSolved",
      "jump": "i",
      "offset": [
        2111,
        2319
      ],
      "op": "JUMP",
      "path": "9"
    },
    "137": {
      "fn": "Factory.isSolved",
      "offset": [
        2111,
        2319
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "138": {
      "fn": "Factory.isSolved",
      "offset": [
        2111,
        2319
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "140": {
      "fn": "Factory.isSolved",
      "offset": [
        2111,
        2319
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "141": {
      "op": "SWAP1"
    },
    "142": {
      "op": "ISZERO"
    },
    "143": {
      "op": "ISZERO"
    },
    "144": {
      "op": "DUP2"
    },
    "145": {
      "op": "MSTORE"
    },
    "146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "148": {
      "op": "ADD"
    },
    "149": {
      "fn": "Factory.isSolved",
      "offset": [
        2111,
        2319
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x78"
    },
    "152": {
      "op": "JUMP"
    },
    "153": {
      "offset": [
        1051,
        1124
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "154": {
      "fn": "Factory.isSolved",
      "offset": [
        1051,
        1124
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x64"
    },
    "157": {
      "offset": [
        1082,
        1124
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4EA1"
    },
    "160": {
      "offset": [
        1051,
        1124
      ],
      "op": "DUP2",
      "path": "9"
    },
    "161": {
      "fn": "Factory.isSolved",
      "offset": [
        1051,
        1124
      ],
      "op": "JUMP",
      "path": "9"
    },
    "162": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "163": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x64"
    },
    "166": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB0"
    },
    "169": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "170": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "172": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D8"
    },
    "175": {
      "fn": "Factory.createPair",
      "jump": "i",
      "offset": [
        1642,
        2105
      ],
      "op": "JUMP",
      "path": "9"
    },
    "176": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "177": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x15C"
    },
    "180": {
      "fn": "Factory.createPair",
      "jump": "i",
      "offset": [
        1642,
        2105
      ],
      "op": "JUMP",
      "path": "9"
    },
    "181": {
      "fn": "Factory.isSolved",
      "offset": [
        2111,
        2319
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "182": {
      "fn": "Factory.isSolved",
      "offset": [
        2152,
        2156
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "184": {
      "fn": "Factory.isSolved",
      "offset": [
        2169,
        2185
      ],
      "op": "DUP1",
      "path": "9"
    },
    "185": {
      "fn": "Factory.isSolved",
      "offset": [
        2187,
        2203
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "187": {
      "fn": "Factory.isSolved",
      "offset": [
        2224,
        2237
      ],
      "op": "DUP1",
      "path": "9"
    },
    "188": {
      "fn": "Factory.isSolved",
      "offset": [
        2224,
        2237
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "190": {
      "fn": "Factory.isSolved",
      "offset": [
        2224,
        2237
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "191": {
      "fn": "Factory.isSolved",
      "offset": [
        2224,
        2237
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "192": {
      "fn": "Factory.isSolved",
      "offset": [
        2224,
        2237
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "193": {
      "fn": "Factory.isSolved",
      "offset": [
        2224,
        2237
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "196": {
      "fn": "Factory.isSolved",
      "offset": [
        2224,
        2237
      ],
      "op": "EXP",
      "path": "9"
    },
    "197": {
      "fn": "Factory.isSolved",
      "offset": [
        2224,
        2237
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "198": {
      "fn": "Factory.isSolved",
      "offset": [
        2224,
        2237
      ],
      "op": "DIV",
      "path": "9"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "205": {
      "op": "SHL"
    },
    "206": {
      "op": "SUB"
    },
    "207": {
      "fn": "Factory.isSolved",
      "offset": [
        2224,
        2237
      ],
      "op": "AND",
      "path": "9"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "214": {
      "op": "SHL"
    },
    "215": {
      "op": "SUB"
    },
    "216": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2263
      ],
      "op": "AND",
      "path": "9"
    },
    "217": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2263
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x902F1AC"
    },
    "222": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "224": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "225": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "DUP2",
      "path": "9"
    },
    "226": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "231": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "AND",
      "path": "9"
    },
    "232": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "234": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "SHL",
      "path": "9"
    },
    "235": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "DUP2",
      "path": "9"
    },
    "236": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "237": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "239": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "ADD",
      "path": "9"
    },
    "240": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "242": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "244": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "245": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "DUP1",
      "path": "9"
    },
    "246": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "DUP4",
      "path": "9"
    },
    "247": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "SUB",
      "path": "9"
    },
    "248": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "DUP2",
      "path": "9"
    },
    "249": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "DUP7",
      "path": "9"
    },
    "250": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "GAS",
      "path": "9"
    },
    "251": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "252": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "253": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "DUP1",
      "path": "9"
    },
    "254": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "255": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10C"
    },
    "258": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "259": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "260": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "262": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "DUP1",
      "path": "9"
    },
    "263": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "264": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "265": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "267": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "REVERT",
      "path": "9"
    },
    "268": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "269": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "POP",
      "path": "9"
    },
    "270": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "POP",
      "path": "9"
    },
    "271": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "POP",
      "path": "9"
    },
    "272": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "POP",
      "path": "9"
    },
    "273": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "275": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "276": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "277": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "279": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "NOT",
      "path": "9"
    },
    "280": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "282": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "DUP3",
      "path": "9"
    },
    "283": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "ADD",
      "path": "9"
    },
    "284": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "AND",
      "path": "9"
    },
    "285": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "DUP3",
      "path": "9"
    },
    "286": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "ADD",
      "path": "9"
    },
    "287": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "DUP1",
      "path": "9"
    },
    "288": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "290": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "291": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "POP",
      "path": "9"
    },
    "292": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "DUP2",
      "path": "9"
    },
    "293": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "ADD",
      "path": "9"
    },
    "294": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "295": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x130"
    },
    "298": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "299": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "300": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x322"
    },
    "303": {
      "fn": "Factory.isSolved",
      "jump": "i",
      "offset": [
        2209,
        2265
      ],
      "op": "JUMP",
      "path": "9"
    },
    "304": {
      "fn": "Factory.isSolved",
      "offset": [
        2209,
        2265
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "305": {
      "fn": "Factory.isSolved",
      "offset": [
        2168,
        2265
      ],
      "op": "POP",
      "path": "9"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "312": {
      "op": "SHL"
    },
    "313": {
      "op": "SUB"
    },
    "314": {
      "fn": "Factory.isSolved",
      "offset": [
        2168,
        2265
      ],
      "op": "AND",
      "path": "9"
    },
    "315": {
      "fn": "Factory.isSolved",
      "offset": [
        2168,
        2265
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "316": {
      "fn": "Factory.isSolved",
      "offset": [
        2168,
        2265
      ],
      "op": "POP",
      "path": "9"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "323": {
      "op": "SHL"
    },
    "324": {
      "op": "SUB"
    },
    "325": {
      "fn": "Factory.isSolved",
      "offset": [
        2168,
        2265
      ],
      "op": "AND",
      "path": "9"
    },
    "326": {
      "fn": "Factory.isSolved",
      "offset": [
        2168,
        2265
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "327": {
      "fn": "Factory.isSolved",
      "offset": [
        2168,
        2265
      ],
      "op": "POP",
      "path": "9"
    },
    "328": {
      "fn": "Factory.isSolved",
      "offset": [
        2282,
        2290
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 0
    },
    "329": {
      "fn": "Factory.isSolved",
      "offset": [
        2294,
        2295
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "331": {
      "fn": "Factory.isSolved",
      "offset": [
        2282,
        2295
      ],
      "op": "EQ",
      "path": "9"
    },
    "332": {
      "fn": "Factory.isSolved",
      "offset": [
        2282,
        2312
      ],
      "op": "DUP1",
      "path": "9"
    },
    "333": {
      "fn": "Factory.isSolved",
      "offset": [
        2282,
        2312
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "334": {
      "fn": "Factory.isSolved",
      "offset": [
        2282,
        2312
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x155"
    },
    "337": {
      "fn": "Factory.isSolved",
      "offset": [
        2282,
        2312
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "338": {
      "op": "POP"
    },
    "339": {
      "fn": "Factory.isSolved",
      "offset": [
        2299,
        2312
      ],
      "op": "DUP1",
      "path": "9"
    },
    "340": {
      "fn": "Factory.isSolved",
      "offset": [
        2299,
        2312
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "341": {
      "fn": "Factory.isSolved",
      "offset": [
        2282,
        2312
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "342": {
      "fn": "Factory.isSolved",
      "offset": [
        2275,
        2312
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "343": {
      "fn": "Factory.isSolved",
      "offset": [
        2275,
        2312
      ],
      "op": "POP",
      "path": "9"
    },
    "344": {
      "fn": "Factory.isSolved",
      "offset": [
        2275,
        2312
      ],
      "op": "POP",
      "path": "9"
    },
    "345": {
      "fn": "Factory.isSolved",
      "offset": [
        2275,
        2312
      ],
      "op": "POP",
      "path": "9"
    },
    "346": {
      "fn": "Factory.isSolved",
      "offset": [
        2111,
        2319
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "347": {
      "fn": "Factory.isSolved",
      "jump": "o",
      "offset": [
        2111,
        2319
      ],
      "op": "JUMP",
      "path": "9"
    },
    "348": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "349": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1744
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "351": {
      "fn": "Factory.createPair",
      "offset": [
        1757,
        1771
      ],
      "op": "DUP1",
      "path": "9"
    },
    "352": {
      "fn": "Factory.createPair",
      "offset": [
        1773,
        1787
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "354": {
      "fn": "Factory.createPair",
      "offset": [
        1800,
        1806
      ],
      "op": "DUP4",
      "path": "9"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "361": {
      "op": "SHL"
    },
    "362": {
      "op": "SUB"
    },
    "363": {
      "fn": "Factory.createPair",
      "offset": [
        1791,
        1806
      ],
      "op": "AND",
      "path": "9"
    },
    "364": {
      "fn": "Factory.createPair",
      "offset": [
        1791,
        1797
      ],
      "op": "DUP6",
      "path": "9"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "371": {
      "op": "SHL"
    },
    "372": {
      "op": "SUB"
    },
    "373": {
      "fn": "Factory.createPair",
      "offset": [
        1791,
        1806
      ],
      "op": "AND",
      "path": "9"
    },
    "374": {
      "branch": 4,
      "fn": "Factory.createPair",
      "offset": [
        1791,
        1806
      ],
      "op": "LT",
      "path": "9"
    },
    "375": {
      "fn": "Factory.createPair",
      "offset": [
        1791,
        1868
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x181"
    },
    "378": {
      "branch": 4,
      "fn": "Factory.createPair",
      "offset": [
        1791,
        1868
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "379": {
      "fn": "Factory.createPair",
      "offset": [
        1853,
        1859
      ],
      "op": "DUP4",
      "path": "9"
    },
    "380": {
      "fn": "Factory.createPair",
      "offset": [
        1861,
        1867
      ],
      "op": "DUP6",
      "path": "9"
    },
    "381": {
      "fn": "Factory.createPair",
      "offset": [
        1791,
        1868
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x184"
    },
    "384": {
      "fn": "Factory.createPair",
      "offset": [
        1791,
        1868
      ],
      "op": "JUMP",
      "path": "9"
    },
    "385": {
      "fn": "Factory.createPair",
      "offset": [
        1791,
        1868
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "386": {
      "fn": "Factory.createPair",
      "offset": [
        1822,
        1828
      ],
      "op": "DUP5",
      "path": "9"
    },
    "387": {
      "fn": "Factory.createPair",
      "offset": [
        1830,
        1836
      ],
      "op": "DUP5",
      "path": "9"
    },
    "388": {
      "fn": "Factory.createPair",
      "offset": [
        1791,
        1868
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "389": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "391": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "392": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "405": {
      "op": "NOT"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "408": {
      "op": "DUP5"
    },
    "409": {
      "op": "DUP2"
    },
    "410": {
      "op": "SHL"
    },
    "411": {
      "op": "DUP3"
    },
    "412": {
      "op": "AND"
    },
    "413": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "415": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "DUP5",
      "path": "9"
    },
    "416": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "ADD",
      "path": "9"
    },
    "417": {
      "op": "MSTORE"
    },
    "418": {
      "op": "DUP4"
    },
    "419": {
      "op": "SWAP1"
    },
    "420": {
      "op": "SHL"
    },
    "421": {
      "op": "AND"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "424": {
      "op": "DUP3"
    },
    "425": {
      "op": "ADD"
    },
    "426": {
      "op": "MSTORE"
    },
    "427": {
      "fn": "Factory.createPair",
      "offset": [
        1756,
        1868
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "428": {
      "fn": "Factory.createPair",
      "offset": [
        1756,
        1868
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "429": {
      "op": "POP"
    },
    "430": {
      "fn": "Factory.createPair",
      "offset": [
        1756,
        1868
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "431": {
      "op": "POP"
    },
    "432": {
      "fn": "Factory.createPair",
      "offset": [
        1878,
        1890
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "434": {
      "fn": "Factory.createPair",
      "offset": [
        1878,
        1890
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "440": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "441": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "443": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "DUP2",
      "path": "9"
    },
    "444": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "DUP4",
      "path": "9"
    },
    "445": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "SUB",
      "path": "9"
    },
    "446": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "SUB",
      "path": "9"
    },
    "447": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "DUP2",
      "path": "9"
    },
    "448": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "449": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "450": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "452": {
      "fn": "Factory.createPair",
      "offset": [
        1903,
        1935
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "453": {
      "fn": "Factory.createPair",
      "offset": [
        1893,
        1936
      ],
      "op": "DUP1",
      "path": "9"
    },
    "454": {
      "fn": "Factory.createPair",
      "offset": [
        1893,
        1936
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "455": {
      "fn": "Factory.createPair",
      "offset": [
        1893,
        1936
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "456": {
      "fn": "Factory.createPair",
      "offset": [
        1893,
        1936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "458": {
      "fn": "Factory.createPair",
      "offset": [
        1893,
        1936
      ],
      "op": "ADD",
      "path": "9"
    },
    "459": {
      "fn": "Factory.createPair",
      "offset": [
        1893,
        1936
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "460": {
      "fn": "Factory.createPair",
      "offset": [
        1878,
        1936
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "461": {
      "fn": "Factory.createPair",
      "offset": [
        1878,
        1936
      ],
      "op": "POP",
      "path": "9"
    },
    "462": {
      "fn": "Factory.createPair",
      "offset": [
        1985,
        1989
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 1
    },
    "463": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "465": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "466": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1DA"
    },
    "469": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "470": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2AF"
    },
    "473": {
      "fn": "Factory.createPair",
      "jump": "i",
      "offset": [
        1961,
        1992
      ],
      "op": "JUMP",
      "path": "9"
    },
    "474": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "475": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "DUP2",
      "path": "9"
    },
    "476": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "477": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "479": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "480": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "DUP1",
      "path": "9"
    },
    "481": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "482": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "SUB",
      "path": "9"
    },
    "483": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "484": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "486": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "CREATE2",
      "path": "9"
    },
    "487": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "488": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "POP",
      "path": "9"
    },
    "489": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "DUP1",
      "path": "9"
    },
    "490": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "491": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "DUP1",
      "path": "9"
    },
    "492": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "493": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FA"
    },
    "496": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "497": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "498": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "500": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "DUP1",
      "path": "9"
    },
    "501": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "502": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "503": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "505": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "REVERT",
      "path": "9"
    },
    "506": {
      "fn": "Factory.createPair",
      "offset": [
        1961,
        1992
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "507": {
      "op": "POP"
    },
    "508": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 2,
      "value": "0x40"
    },
    "510": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "511": {
      "op": "PUSH4",
      "value": "0x485CC955"
    },
    "516": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "518": {
      "op": "SHL"
    },
    "519": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "DUP2",
      "path": "9"
    },
    "520": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "527": {
      "op": "SHL"
    },
    "528": {
      "op": "SUB"
    },
    "529": {
      "op": "DUP6"
    },
    "530": {
      "op": "DUP2"
    },
    "531": {
      "op": "AND"
    },
    "532": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "534": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "DUP4",
      "path": "9"
    },
    "535": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "ADD",
      "path": "9"
    },
    "536": {
      "op": "MSTORE"
    },
    "537": {
      "op": "DUP5"
    },
    "538": {
      "op": "DUP2"
    },
    "539": {
      "op": "AND"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "542": {
      "op": "DUP4"
    },
    "543": {
      "op": "ADD"
    },
    "544": {
      "op": "MSTORE"
    },
    "545": {
      "fn": "Factory.createPair",
      "offset": [
        1946,
        1993
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "546": {
      "fn": "Factory.createPair",
      "offset": [
        1946,
        1993
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "547": {
      "op": "POP"
    },
    "548": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2034
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "549": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2034
      ],
      "op": "DUP6",
      "path": "9"
    },
    "550": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2034
      ],
      "op": "AND",
      "path": "9"
    },
    "551": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2034
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "552": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2034
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x485CC955"
    },
    "557": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2034
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "560": {
      "op": "ADD"
    },
    "561": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "563": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "565": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "566": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "DUP1",
      "path": "9"
    },
    "567": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "DUP4",
      "path": "9"
    },
    "568": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "SUB",
      "path": "9"
    },
    "569": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "DUP2",
      "path": "9"
    },
    "570": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "572": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "DUP8",
      "path": "9"
    },
    "573": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "DUP1",
      "path": "9"
    },
    "574": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "575": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "576": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "DUP1",
      "path": "9"
    },
    "577": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "578": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x24A"
    },
    "581": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "582": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "584": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "DUP1",
      "path": "9"
    },
    "585": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "REVERT",
      "path": "9"
    },
    "586": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "587": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "POP",
      "path": "9"
    },
    "588": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "GAS",
      "path": "9"
    },
    "589": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "CALL",
      "path": "9"
    },
    "590": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "591": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "DUP1",
      "path": "9"
    },
    "592": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "593": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25E"
    },
    "596": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "597": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "598": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "600": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "DUP1",
      "path": "9"
    },
    "601": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "602": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "603": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "605": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "REVERT",
      "path": "9"
    },
    "606": {
      "fn": "Factory.createPair",
      "offset": [
        2003,
        2050
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "POP"
    },
    "609": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 3,
      "value": "0x40"
    },
    "611": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "618": {
      "op": "SHL"
    },
    "619": {
      "op": "SUB"
    },
    "620": {
      "op": "DUP8"
    },
    "621": {
      "op": "DUP2"
    },
    "622": {
      "op": "AND"
    },
    "623": {
      "op": "DUP3"
    },
    "624": {
      "op": "MSTORE"
    },
    "625": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "DUP1",
      "path": "9"
    },
    "626": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "DUP7",
      "path": "9"
    },
    "627": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "AND",
      "path": "9"
    },
    "628": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "629": {
      "op": "POP"
    },
    "630": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "DUP7",
      "path": "9"
    },
    "631": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "AND",
      "path": "9"
    },
    "632": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA92A2B95C8D8436F6AC4C673C61487364F877EFB9534D4296FAD8EF904546C94"
    },
    "667": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "670": {
      "op": "ADD"
    },
    "671": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "673": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "674": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "DUP1",
      "path": "9"
    },
    "675": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "676": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "SUB",
      "path": "9"
    },
    "677": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "678": {
      "fn": "Factory.createPair",
      "offset": [
        2065,
        2098
      ],
      "op": "LOG3",
      "path": "9"
    },
    "679": {
      "fn": "Factory.createPair",
      "offset": [
        1746,
        2105
      ],
      "op": "POP",
      "path": "9"
    },
    "680": {
      "fn": "Factory.createPair",
      "offset": [
        1746,
        2105
      ],
      "op": "POP",
      "path": "9"
    },
    "681": {
      "fn": "Factory.createPair",
      "offset": [
        1746,
        2105
      ],
      "op": "POP",
      "path": "9"
    },
    "682": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "683": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "684": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "POP",
      "path": "9"
    },
    "685": {
      "fn": "Factory.createPair",
      "offset": [
        1642,
        2105
      ],
      "op": "POP",
      "path": "9"
    },
    "686": {
      "fn": "Factory.createPair",
      "jump": "o",
      "offset": [
        1642,
        2105
      ],
      "op": "JUMP",
      "path": "9"
    },
    "687": {
      "op": "JUMPDEST"
    },
    "688": {
      "op": "PUSH2",
      "value": "0x24D5"
    },
    "691": {
      "op": "DUP1"
    },
    "692": {
      "op": "PUSH2",
      "value": "0x373"
    },
    "695": {
      "op": "DUP4"
    },
    "696": {
      "op": "CODECOPY"
    },
    "697": {
      "op": "ADD"
    },
    "698": {
      "op": "SWAP1"
    },
    "699": {
      "jump": "o",
      "op": "JUMP"
    },
    "700": {
      "op": "JUMPDEST"
    },
    "701": {
      "op": "DUP1"
    },
    "702": {
      "op": "CALLDATALOAD"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "709": {
      "op": "SHL"
    },
    "710": {
      "op": "SUB"
    },
    "711": {
      "op": "DUP2"
    },
    "712": {
      "op": "AND"
    },
    "713": {
      "op": "DUP2"
    },
    "714": {
      "op": "EQ"
    },
    "715": {
      "op": "PUSH2",
      "value": "0x2D3"
    },
    "718": {
      "op": "JUMPI"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "721": {
      "op": "DUP1"
    },
    "722": {
      "op": "REVERT"
    },
    "723": {
      "op": "JUMPDEST"
    },
    "724": {
      "op": "SWAP2"
    },
    "725": {
      "op": "SWAP1"
    },
    "726": {
      "op": "POP"
    },
    "727": {
      "jump": "o",
      "op": "JUMP"
    },
    "728": {
      "op": "JUMPDEST"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "731": {
      "op": "DUP1"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "734": {
      "op": "DUP4"
    },
    "735": {
      "op": "DUP6"
    },
    "736": {
      "op": "SUB"
    },
    "737": {
      "op": "SLT"
    },
    "738": {
      "op": "ISZERO"
    },
    "739": {
      "op": "PUSH2",
      "value": "0x2EB"
    },
    "742": {
      "op": "JUMPI"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "745": {
      "op": "DUP1"
    },
    "746": {
      "op": "REVERT"
    },
    "747": {
      "op": "JUMPDEST"
    },
    "748": {
      "op": "PUSH2",
      "value": "0x2F4"
    },
    "751": {
      "op": "DUP4"
    },
    "752": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "755": {
      "jump": "i",
      "op": "JUMP"
    },
    "756": {
      "op": "JUMPDEST"
    },
    "757": {
      "op": "SWAP2"
    },
    "758": {
      "op": "POP"
    },
    "759": {
      "op": "PUSH2",
      "value": "0x302"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "764": {
      "op": "DUP5"
    },
    "765": {
      "op": "ADD"
    },
    "766": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "769": {
      "jump": "i",
      "op": "JUMP"
    },
    "770": {
      "op": "JUMPDEST"
    },
    "771": {
      "op": "SWAP1"
    },
    "772": {
      "op": "POP"
    },
    "773": {
      "op": "SWAP3"
    },
    "774": {
      "op": "POP"
    },
    "775": {
      "op": "SWAP3"
    },
    "776": {
      "op": "SWAP1"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "jump": "o",
      "op": "JUMP"
    },
    "779": {
      "op": "JUMPDEST"
    },
    "780": {
      "op": "DUP1"
    },
    "781": {
      "op": "MLOAD"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "788": {
      "op": "SHL"
    },
    "789": {
      "op": "SUB"
    },
    "790": {
      "op": "DUP2"
    },
    "791": {
      "op": "AND"
    },
    "792": {
      "op": "DUP2"
    },
    "793": {
      "op": "EQ"
    },
    "794": {
      "op": "PUSH2",
      "value": "0x2D3"
    },
    "797": {
      "op": "JUMPI"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "800": {
      "op": "DUP1"
    },
    "801": {
      "op": "REVERT"
    },
    "802": {
      "op": "JUMPDEST"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "805": {
      "op": "DUP1"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "810": {
      "op": "DUP5"
    },
    "811": {
      "op": "DUP7"
    },
    "812": {
      "op": "SUB"
    },
    "813": {
      "op": "SLT"
    },
    "814": {
      "op": "ISZERO"
    },
    "815": {
      "op": "PUSH2",
      "value": "0x337"
    },
    "818": {
      "op": "JUMPI"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "821": {
      "op": "DUP1"
    },
    "822": {
      "op": "REVERT"
    },
    "823": {
      "op": "JUMPDEST"
    },
    "824": {
      "op": "PUSH2",
      "value": "0x340"
    },
    "827": {
      "op": "DUP5"
    },
    "828": {
      "op": "PUSH2",
      "value": "0x30B"
    },
    "831": {
      "jump": "i",
      "op": "JUMP"
    },
    "832": {
      "op": "JUMPDEST"
    },
    "833": {
      "op": "SWAP3"
    },
    "834": {
      "op": "POP"
    },
    "835": {
      "op": "PUSH2",
      "value": "0x34E"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "840": {
      "op": "DUP6"
    },
    "841": {
      "op": "ADD"
    },
    "842": {
      "op": "PUSH2",
      "value": "0x30B"
    },
    "845": {
      "jump": "i",
      "op": "JUMP"
    },
    "846": {
      "op": "JUMPDEST"
    },
    "847": {
      "op": "SWAP2"
    },
    "848": {
      "op": "POP"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "851": {
      "op": "DUP5"
    },
    "852": {
      "op": "ADD"
    },
    "853": {
      "op": "MLOAD"
    },
    "854": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "859": {
      "op": "DUP2"
    },
    "860": {
      "op": "AND"
    },
    "861": {
      "op": "DUP2"
    },
    "862": {
      "op": "EQ"
    },
    "863": {
      "op": "PUSH2",
      "value": "0x367"
    },
    "866": {
      "op": "JUMPI"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "869": {
      "op": "DUP1"
    },
    "870": {
      "op": "REVERT"
    },
    "871": {
      "op": "JUMPDEST"
    },
    "872": {
      "op": "DUP1"
    },
    "873": {
      "op": "SWAP2"
    },
    "874": {
      "op": "POP"
    },
    "875": {
      "op": "POP"
    },
    "876": {
      "op": "SWAP3"
    },
    "877": {
      "op": "POP"
    },
    "878": {
      "op": "SWAP3"
    },
    "879": {
      "op": "POP"
    },
    "880": {
      "op": "SWAP3"
    },
    "881": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "767faa733f3e3032dbadc7b0f1d38b27eefb6d92",
  "source": "pragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./UniswapV2Pair.sol\";\n\n//* deployer account: 0x96bABB81E74E8518D0D6662497289C463DAAb1D1\n//* token: v4.local.L5F8Sq4kleMp5-WaHmj1y6kNGElyu-gWW3ntroWMPzRFuSHG05X1ffGsU7SmCBtSVZBCpptCjHyCd92JbTq7q-X00pSUp98I0Celdnnpdlc3IG9QAC7214oKq82ChvIj-gKoOBrJPGQGqZZFIdkovHrIyVf4om3WVNnBWUNCmfNwKw\n\n//* contract address: 0x82be68643Aaab66614377499d0854bf686AE7d2D\n//* transaction hash: 0x7894da4d8433cf5dd68b2ef7a7184da62da24d42fa5f13052f46dbf4547f3e90\n\n\ncontract SimpleToken is ERC20 {\n    constructor(uint256 _initialSupply) ERC20(\"SimpleToken\", \"SPT\") {\n        _mint(msg.sender, _initialSupply);\n    }\n}\n\ninterface IUniswapV2Pair {\n    function getReserves()\n        external\n        view\n        returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n\n    function mint(address to) external returns (uint liquidity);\n\n    function initialize(address, address) external;\n}\n\ncontract Factory {\n    address public constant WETH = 0x0000000000000000000000000000000000004eA1;\n    address public uniswapV2Pair;\n\n    event PairCreated(\n        address indexed token0,\n        address indexed token1,\n        address pair\n    );\n\n    constructor() payable {\n        require(msg.value == 1 ether);\n        address token = address(new SimpleToken(10 ** 8 * 1 ether));\n        uniswapV2Pair = createPair(WETH, token);\n        IERC20(WETH).transfer(uniswapV2Pair, 1 ether);\n        IERC20(token).transfer(uniswapV2Pair, 100 ether);\n        IUniswapV2Pair(uniswapV2Pair).mint(msg.sender);\n    }\n\n    function createPair(\n        address tokenA,\n        address tokenB\n    ) public returns (address pair) {\n        (address token0, address token1) = tokenA < tokenB\n            ? (tokenA, tokenB)\n            : (tokenB, tokenA);\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        pair = address(new UniswapV2Pair{salt: salt}());\n        IUniswapV2Pair(pair).initialize(token0, token1);\n        emit PairCreated(token0, token1, pair);\n    }\n\n    function isSolved() public view returns (bool) {\n        (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(uniswapV2Pair)\n            .getReserves();\n        return reserve0 == 0 && reserve1 == 0;\n    }\n}\n",
  "sourceMap": "1028:1293:9:-:0;;;1321:9;1334:7;1321:20;1313:29;;;;;;1352:13;1392:17;1376:34;;;;;:::i;:::-;194:25:12;;;182:2;167:18;1376:34:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1352:59:9;-1:-1:-1;1437:23:9;1082:42;1352:59;1437:10;:23::i;:::-;1421:13;:39;;-1:-1:-1;;;;;;1421:39:9;-1:-1:-1;;;;;1421:39:9;;;;;;;;;1470:45;;-1:-1:-1;;;1470:45:9;;;;;430:51:12;;;;1507:7:9;497:18:12;;;490:34;1082:42:9;;1470:21;;403:18:12;;1470:45:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1548:13:9;;1525:48;;-1:-1:-1;;;1525:48:9;;-1:-1:-1;;;;;1548:13:9;;;1525:48;;;430:51:12;1563:9:9;497:18:12;;;490:34;1525:22:9;;;;;;403:18:12;;1525:48:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1598:13:9;;1583:46;;-1:-1:-1;;;1583:46:9;;1618:10;1583:46;;;1270:51:12;-1:-1:-1;;;;;1598:13:9;;;;1583:34;;1243:18:12;;1583:46:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1303:333;1028:1293;;1642:463;1732:12;1757:14;1773;1800:6;-1:-1:-1;;;;;1791:15:9;:6;-1:-1:-1;;;;;1791:15:9;;:77;;1853:6;1861;1791:77;;;1822:6;1830;1791:77;1903:32;;-1:-1:-1;;;;;;1700:2:12;1736:15;;;1732:24;;1903:32:9;;;1720:37:12;1791:15;;;1787:24;1773:12;;;1766:46;1756:112:9;;-1:-1:-1;1756:112:9;-1:-1:-1;1878:12:9;;1828::12;;1903:32:9;;;;;;;;;;;;1893:43;;;;;;1878:58;;1985:4;1961:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2003:47:9;;-1:-1:-1;;;2003:47:9;;-1:-1:-1;;;;;2081:15:12;;;2003:47:9;;;2063:34:12;2133:15;;;2113:18;;;2106:43;1946:47:9;;-1:-1:-1;2003:31:9;;;;;;1998:18:12;;2003:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2065:33:9;;-1:-1:-1;;;;;1288:32:12;;;1270:51;;2065:33:9;;;;-1:-1:-1;2065:33:9;;;-1:-1:-1;2065:33:9;;1258:2:12;1243:18;2065:33:9;;;;;;;1746:359;;;1642:463;;;;:::o;1028:1293::-;;;;;;;;:::o;:::-;;;;;;;;:::o;535:277:12:-;602:6;655:2;643:9;634:7;630:23;626:32;623:52;;;671:1;668;661:12;623:52;703:9;697:16;756:5;749:13;742:21;735:5;732:32;722:60;;778:1;775;768:12;722:60;801:5;535:277;-1:-1:-1;;;535:277:12:o;1332:184::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:16:12;;1332:184;-1:-1:-1;1332:184:12:o;1851:304::-;1028:1293:9;;;;;;",
  "sourcePath": "contracts/Factory.sol",
  "type": "contract"
}