{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "TARGET",
      "outputs": [
        {
          "internalType": "contract Unknown",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSolved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Setup.sol",
    "1": "contracts/Unknown.sol"
  },
  "ast": {
    "absolutePath": "contracts/Setup.sol",
    "exportedSymbols": {
      "Setup": [
        28
      ],
      "Unknown": [
        48
      ]
    },
    "id": 29,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "contracts/Unknown.sol",
        "file": "./Unknown.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 29,
        "sourceUnit": 49,
        "src": "26:38:0",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "Unknown",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48,
              "src": "34:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Setup",
        "contractDependencies": [
          48
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28,
        "linearizedBaseContracts": [
          28
        ],
        "name": "Setup",
        "nameLocation": "75:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "cc1f2afa",
            "id": 6,
            "mutability": "immutable",
            "name": "TARGET",
            "nameLocation": "112:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 28,
            "src": "87:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Unknown_$48",
              "typeString": "contract Unknown"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "Unknown",
                "nameLocations": [
                  "87:7:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48,
                "src": "87:7:0"
              },
              "referencedDeclaration": 48,
              "src": "87:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Unknown_$48",
                "typeString": "contract Unknown"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "139:39:0",
              "statements": [
                {
                  "expression": {
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9,
                      "name": "TARGET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "149:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Unknown_$48",
                        "typeString": "contract Unknown"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "158:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Unknown_$48_$",
                          "typeString": "function () returns (contract Unknown)"
                        },
                        "typeName": {
                          "id": 11,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 10,
                            "name": "Unknown",
                            "nameLocations": [
                              "162:7:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 48,
                            "src": "162:7:0"
                          },
                          "referencedDeclaration": 48,
                          "src": "162:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Unknown_$48",
                            "typeString": "contract Unknown"
                          }
                        }
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "158:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Unknown_$48",
                        "typeString": "contract Unknown"
                      }
                    },
                    "src": "149:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Unknown_$48",
                      "typeString": "contract Unknown"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "149:22:0"
                }
              ]
            },
            "id": 17,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "136:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "139:0:0"
            },
            "scope": 28,
            "src": "125:53:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "231:40:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 22,
                        "name": "TARGET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "248:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Unknown_$48",
                          "typeString": "contract Unknown"
                        }
                      },
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "255:7:0",
                      "memberName": "updated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "248:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "248:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21,
                  "id": 25,
                  "nodeType": "Return",
                  "src": "241:23:0"
                }
              ]
            },
            "functionSelector": "64d98f6e",
            "id": 27,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSolved",
            "nameLocation": "193:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "225:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "225:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "224:6:0"
            },
            "scope": 28,
            "src": "184:87:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 29,
        "src": "66:207:0",
        "usedErrors": []
      }
    ],
    "src": "0:274:0"
  },
  "bytecode": "60a060405234801561001057600080fd5b5060405161001d9061004b565b604051809103906000f080158015610039573d6000803e3d6000fd5b506001600160a01b0316608052610057565b60ed806101f683390190565b60805161017f61007760003960008181605d0152609b015261017f6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806364d98f6e1461003b578063cc1f2afa14610058575b600080fd5b610043610097565b60405190151581526020015b60405180910390f35b61007f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161004f565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637b2aab036040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011b9190610120565b905090565b60006020828403121561013257600080fd5b8151801515811461014257600080fd5b939250505056fea2646970667358221220750197d2753583681c520eb5dd460cea76f2615c714062b25faf56cdc04546a264736f6c63430008130033608060405234801561001057600080fd5b5060ce8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80637b2aab03146037578063ca4f14c4146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b606660623660046080565b6068565b005b80600a03607d576000805460ff191660011790555b50565b600060208284031215609157600080fd5b503591905056fea26469706673582212200f1bada2e10f847341e0ec4fbb6554550964e1f2efd0b7f45c93fb90be15ff4564736f6c63430008130033",
  "bytecodeSha1": "135bf2441fb37a33d4fd9b1c24251906f3f02c45",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "Setup",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {}
    },
    "statements": {
      "0": {
        "Setup.isSolved": {
          "0": [
            241,
            264
          ]
        }
      },
      "1": {}
    }
  },
  "dependencies": [
    "Unknown"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c806364d98f6e1461003b578063cc1f2afa14610058575b600080fd5b610043610097565b60405190151581526020015b60405180910390f35b61007f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161004f565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637b2aab036040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011b9190610120565b905090565b60006020828403121561013257600080fd5b8151801515811461014257600080fd5b939250505056fea2646970667358221220750197d2753583681c520eb5dd460cea76f2615c714062b25faf56cdc04546a264736f6c63430008130033",
  "deployedSourceMap": "66:207:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;184:87;;;:::i;:::-;;;179:14:2;;172:22;154:41;;142:2;127:18;184:87:0;;;;;;;;87:31;;;;;;;;-1:-1:-1;;;;;384:32:2;;;366:51;;354:2;339:18;87:31:0;206:217:2;184:87:0;225:4;248:6;-1:-1:-1;;;;;248:14:0;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;241:23;;184:87;:::o;428:277:2:-;495:6;548:2;536:9;527:7;523:23;519:32;516:52;;;564:1;561;554:12;516:52;596:9;590:16;649:5;642:13;635:21;628:5;625:32;615:60;;671:1;668;661:12;615:60;694:5;428:277;-1:-1:-1;;;428:277:2:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    66,
    273
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64D98F6E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCC1F2AFA EQ PUSH2 0x58 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x97 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4F JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7B2AAB03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x120 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x197D2753583681C520EB5DD460CEA76F2615C714062 0xB2 0x5F 0xAF JUMP 0xCD 0xC0 GASLIMIT CHAINID LOG2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        66,
        273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x64D98F6E"
    },
    "38": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCC1F2AFA"
    },
    "49": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58"
    },
    "53": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "DUP1",
      "path": "0"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        66,
        273
      ],
      "op": "REVERT",
      "path": "0"
    },
    "59": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "60": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43"
    },
    "63": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "66": {
      "fn": "Setup.isSolved",
      "jump": "i",
      "offset": [
        184,
        271
      ],
      "op": "JUMP",
      "path": "0"
    },
    "67": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "68": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "70": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "71": {
      "op": "SWAP1"
    },
    "72": {
      "op": "ISZERO"
    },
    "73": {
      "op": "ISZERO"
    },
    "74": {
      "op": "DUP2"
    },
    "75": {
      "op": "MSTORE"
    },
    "76": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "78": {
      "op": "ADD"
    },
    "79": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "80": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "82": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "83": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "84": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "85": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "SUB",
      "path": "0"
    },
    "86": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "87": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "RETURN",
      "path": "0"
    },
    "88": {
      "offset": [
        87,
        118
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "89": {
      "fn": "Setup.isSolved",
      "offset": [
        87,
        118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F"
    },
    "92": {
      "fn": "Setup.isSolved",
      "offset": [
        87,
        118
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "125": {
      "fn": "Setup.isSolved",
      "offset": [
        87,
        118
      ],
      "op": "DUP2",
      "path": "0"
    },
    "126": {
      "fn": "Setup.isSolved",
      "offset": [
        87,
        118
      ],
      "op": "JUMP",
      "path": "0"
    },
    "127": {
      "fn": "Setup.isSolved",
      "offset": [
        87,
        118
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "128": {
      "fn": "Setup.isSolved",
      "offset": [
        87,
        118
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "130": {
      "fn": "Setup.isSolved",
      "offset": [
        87,
        118
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "137": {
      "op": "SHL"
    },
    "138": {
      "op": "SUB"
    },
    "139": {
      "op": "SWAP1"
    },
    "140": {
      "op": "SWAP2"
    },
    "141": {
      "op": "AND"
    },
    "142": {
      "op": "DUP2"
    },
    "143": {
      "op": "MSTORE"
    },
    "144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "146": {
      "op": "ADD"
    },
    "147": {
      "offset": [
        87,
        118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F"
    },
    "150": {
      "op": "JUMP"
    },
    "151": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": "Setup.isSolved",
      "offset": [
        225,
        229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "154": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        254
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "193": {
      "op": "SHL"
    },
    "194": {
      "op": "SUB"
    },
    "195": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        262
      ],
      "op": "AND",
      "path": "0"
    },
    "196": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        262
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7B2AAB03"
    },
    "201": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "203": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "204": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "205": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "210": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "AND",
      "path": "0"
    },
    "211": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "213": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "SHL",
      "path": "0"
    },
    "214": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "215": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "216": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "218": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "ADD",
      "path": "0"
    },
    "219": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "221": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "223": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "224": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "DUP1",
      "path": "0"
    },
    "225": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "DUP4",
      "path": "0"
    },
    "226": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "SUB",
      "path": "0"
    },
    "227": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "228": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "DUP7",
      "path": "0"
    },
    "229": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "GAS",
      "path": "0"
    },
    "230": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "231": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "232": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "DUP1",
      "path": "0"
    },
    "233": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "234": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "237": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "238": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "239": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "241": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "DUP1",
      "path": "0"
    },
    "242": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "243": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "244": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "246": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "REVERT",
      "path": "0"
    },
    "247": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "248": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "POP",
      "path": "0"
    },
    "249": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "POP",
      "path": "0"
    },
    "250": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "POP",
      "path": "0"
    },
    "251": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "POP",
      "path": "0"
    },
    "252": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "254": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "255": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "256": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "258": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "NOT",
      "path": "0"
    },
    "259": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "261": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "DUP3",
      "path": "0"
    },
    "262": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "ADD",
      "path": "0"
    },
    "263": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "AND",
      "path": "0"
    },
    "264": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "DUP3",
      "path": "0"
    },
    "265": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "ADD",
      "path": "0"
    },
    "266": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "DUP1",
      "path": "0"
    },
    "267": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "269": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "270": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "POP",
      "path": "0"
    },
    "271": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "272": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "ADD",
      "path": "0"
    },
    "273": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "274": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B"
    },
    "277": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "278": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "279": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "282": {
      "fn": "Setup.isSolved",
      "jump": "i",
      "offset": [
        248,
        264
      ],
      "op": "JUMP",
      "path": "0"
    },
    "283": {
      "fn": "Setup.isSolved",
      "offset": [
        248,
        264
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "284": {
      "fn": "Setup.isSolved",
      "offset": [
        241,
        264
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "285": {
      "fn": "Setup.isSolved",
      "offset": [
        241,
        264
      ],
      "op": "POP",
      "path": "0"
    },
    "286": {
      "fn": "Setup.isSolved",
      "offset": [
        184,
        271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "287": {
      "fn": "Setup.isSolved",
      "jump": "o",
      "offset": [
        184,
        271
      ],
      "op": "JUMP",
      "path": "0"
    },
    "288": {
      "op": "JUMPDEST"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "293": {
      "op": "DUP3"
    },
    "294": {
      "op": "DUP5"
    },
    "295": {
      "op": "SUB"
    },
    "296": {
      "op": "SLT"
    },
    "297": {
      "op": "ISZERO"
    },
    "298": {
      "op": "PUSH2",
      "value": "0x132"
    },
    "301": {
      "op": "JUMPI"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "304": {
      "op": "DUP1"
    },
    "305": {
      "op": "REVERT"
    },
    "306": {
      "op": "JUMPDEST"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MLOAD"
    },
    "309": {
      "op": "DUP1"
    },
    "310": {
      "op": "ISZERO"
    },
    "311": {
      "op": "ISZERO"
    },
    "312": {
      "op": "DUP2"
    },
    "313": {
      "op": "EQ"
    },
    "314": {
      "op": "PUSH2",
      "value": "0x142"
    },
    "317": {
      "op": "JUMPI"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "320": {
      "op": "DUP1"
    },
    "321": {
      "op": "REVERT"
    },
    "322": {
      "op": "JUMPDEST"
    },
    "323": {
      "op": "SWAP4"
    },
    "324": {
      "op": "SWAP3"
    },
    "325": {
      "op": "POP"
    },
    "326": {
      "op": "POP"
    },
    "327": {
      "op": "POP"
    },
    "328": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "57ff6d7c3197baff4c92e9ea980cf55779fb9936",
  "source": "pragma solidity ^0.8.18;\n\nimport {Unknown} from \"./Unknown.sol\";\n\ncontract Setup {\n    Unknown public immutable TARGET;\n\n    constructor() {\n        TARGET = new Unknown();\n    }\n\n    function isSolved() public view returns (bool) {\n        return TARGET.updated();\n    }\n}\n",
  "sourceMap": "66:207:0:-:0;;;125:53;;;;;;;;;;158:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;149:22:0;;;66:207;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Setup.sol",
  "type": "contract"
}